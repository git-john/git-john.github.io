<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>十年码农之技术沉淀</title>
  
  <subtitle>技术博客，随笔，技术沉淀总结</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-24T09:21:54.538Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John KANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>年度总结与来年展望</title>
    <link href="http://yoursite.com/2019/01/24/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%E4%B8%8E%E6%9D%A5%E5%B9%B4%E5%B1%95%E6%9C%9B/"/>
    <id>http://yoursite.com/2019/01/24/年度总结与来年展望/</id>
    <published>2019-01-24T15:33:10.000Z</published>
    <updated>2019-01-24T09:21:54.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2018年度总结"><a href="#2018年度总结" class="headerlink" title="2018年度总结"></a>2018年度总结</h3><p>2018年已经过去了，2019的春节也在下周就要进入回老家过年模式了。2018年公司业绩持续下滑，工资也发不起，在这样的背景下<span style="background-color: yellow;">CEO &amp; CTO </span>突然宣布要单干，弄下一堆龌龊事，丢下一堆没交接的工作让我们剩下的人去摸索，个中详情堪比宫斗。具体情况也就不多言了，是枭雄也好，是小人也罢，都让它留在2018的岁月里，2018的人生经历中<a id="more"></a></p><p>回顾在他领导的公司文化下工作的这将近四年，觉得自己真是脑子秀逗。<span style="background-color: yellow;">公司管理混乱；ceo脾气暴躁，动辄咆哮；技术不被认可；做着边缘工作，技术得不到提升；经常要加班到很晚，经常要凌晨两三点起床做技术support；</span>就这样的环境我愣是呆了将近四年，刚开始的时候居然还能满怀激情，在别人发着大把奖金的情况下我也能心平气和。现在回头想想，只是因为老板会画饼，因为给我0。5的股份承诺，我将公司当成了一个可以长远发展的平台。事实证明，如果自身能力得不到提升，一切都是虚妄,别人想抛弃你就抛弃你。</p><p>其实回顾这工作的10年来， 我都在自己作，没有长远的规划，从来也没想过要进大公司，都是在得过且过，每思及此， 都要顿首懊恼。 往事已经不可追， 未来还是要期一下的。 未来需要努力提升自己，从身体上，修养上，知识技能上。</p><h3 id="2019年度计划"><a href="#2019年度计划" class="headerlink" title="2019年度计划"></a>2019年度计划</h3><p>2019年需要努力提升自己的技能包。希望下一个10年从2019做起，即使不能富贵也需要拒绝做中年油腻男，拒绝做被别人调侃的对象。以下为2019年的年度学习，生活计划。时间：~2010-01-01</p><ul><li>每周学习100个以上英语单词 （25*4+）</li><li>码农沉淀计划 - 每周三篇以上gitpage博客。 内容主要为：<blockquote><p>英语系列， 面试题目系列， 设计模式系列， jvm系列， linux系列</p></blockquote></li><li>找一份比较满意的工作</li><li>博客园开通博客，写一些高质量博客</li><li>开通个人服务号，打造个人品牌</li><li>阅读8本技术书籍</li><li>带着我的大小宝贝出门旅游</li><li>每周至少健身一次</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2018年度总结&quot;&gt;&lt;a href=&quot;#2018年度总结&quot; class=&quot;headerlink&quot; title=&quot;2018年度总结&quot;&gt;&lt;/a&gt;2018年度总结&lt;/h3&gt;&lt;p&gt;2018年已经过去了，2019的春节也在下周就要进入回老家过年模式了。2018年公司业绩持续下滑，工资也发不起，在这样的背景下&lt;span style=&quot;background-color: yellow;&quot;&gt;CEO &amp;amp; CTO &lt;/span&gt;突然宣布要单干，弄下一堆龌龊事，丢下一堆没交接的工作让我们剩下的人去摸索，个中详情堪比宫斗。具体情况也就不多言了，是枭雄也好，是小人也罢，都让它留在2018的岁月里，2018的人生经历中
    
    </summary>
    
    
      <category term="主页" scheme="http://yoursite.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
      <category term="年度总结" scheme="http://yoursite.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>关于https证书</title>
    <link href="http://yoursite.com/2019/01/15/%E5%85%B3%E4%BA%8Ehttps%E8%AF%81%E4%B9%A6/"/>
    <id>http://yoursite.com/2019/01/15/关于https证书/</id>
    <published>2019-01-15T15:24:38.000Z</published>
    <updated>2019-01-24T09:17:26.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于https证书"><a href="#关于https证书" class="headerlink" title="关于https证书"></a>关于https证书</h1><ul><li>https协议需要到ca申请证书，一般免费证书很少，需要交费。</li><li>http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。</li><li>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</li><li>http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全</li><li></li></ul><blockquote><p>苹果宣布了一个最后期限：到2017年1月1日 App Store中的所有应用都必须启用 App Transport Security安全功能。App Transport Security（ATS）是苹果在iOS 9中引入的一项隐私保护功能，屏蔽明文HTTP资源加载，连接必须经过更安全的HTTPS。苹果目前允许开发者暂时关闭ATS，可以继续使用HTTP连接，但到年底所有官方商店的应用都必须强制性使用ATS.<br><br>所以，推行https是整个互联网行业的趋势.<br><a id="more"></a></p></blockquote><h1 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h1><blockquote><p>目前主流的SSL证书主要分为DV SSL 、 OV SSL 、EV SSL</p></blockquote><h2 id="DV-SSL"><a href="#DV-SSL" class="headerlink" title="DV SSL"></a>DV SSL</h2><p>DV SSL证书是只验证网站域名所有权的简易型（Class 1级）SSL证书，可10分钟快速颁发，能起到加密传输的作用，但无法向用户证明网站的真实身份。<br>目前市面上的免费证书都是这个类型的，只是提供了对数据的加密，但是对提供证书的个人和机构的身份不做验证。</p><h2 id="OV-SSL"><a href="#OV-SSL" class="headerlink" title="OV SSL"></a>OV SSL</h2><p>OV SSL,提供加密功能,对申请者做严格的身份审核验证,提供可信身份证明。<br>和DV SSL的区别在于，OV SSL 提供了对个人或者机构的审核，能确认对方的身份，安全性更高。<br>所以这部分的证书申请是收费的~</p><h2 id="EV-SSL"><a href="#EV-SSL" class="headerlink" title="EV SSL"></a>EV SSL</h2><p>超安=EV=最安全、最严格 超安EV SSL证书遵循全球统一的严格身份验证标准，是目前业界安全级别最高的顶级 (Class 4级)SSL证书。<br>金融证券、银行、第三方支付、网上商城等，重点强调网站安全、企业可信形象的网站，涉及交易支付、客户隐私信息和账号密码的传输。<br>这部分的验证要求最高，申请费用也是最贵的。</p><h1 id="常见的颁发证书机构"><a href="#常见的颁发证书机构" class="headerlink" title="常见的颁发证书机构"></a>常见的颁发证书机构</h1><ul><li>赛门铁克(Symantec)是 SSL/TLS 证书的领先提供商</li><li>中国金融认证中心(CFCA)全球信任SSL证书</li><li>GeoTrust是全球第二大数字证书颁发机构</li><li></li></ul><blockquote><p>转自： <a href="https://www.cnblogs.com/Javi/p/6479577.html" target="_blank" rel="noopener">https://www.cnblogs.com/Javi/p/6479577.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于https证书&quot;&gt;&lt;a href=&quot;#关于https证书&quot; class=&quot;headerlink&quot; title=&quot;关于https证书&quot;&gt;&lt;/a&gt;关于https证书&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;https协议需要到ca申请证书，一般免费证书很少，需要交费。&lt;/li&gt;
&lt;li&gt;http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。&lt;/li&gt;
&lt;li&gt;http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。&lt;/li&gt;
&lt;li&gt;http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;苹果宣布了一个最后期限：到2017年1月1日 App Store中的所有应用都必须启用 App Transport Security安全功能。App Transport Security（ATS）是苹果在iOS 9中引入的一项隐私保护功能，屏蔽明文HTTP资源加载，连接必须经过更安全的HTTPS。苹果目前允许开发者暂时关闭ATS，可以继续使用HTTP连接，但到年底所有官方商店的应用都必须强制性使用ATS.&lt;br&gt;&lt;br&gt;所以，推行https是整个互联网行业的趋势.&lt;br&gt;
    
    </summary>
    
    
      <category term="主页" scheme="http://yoursite.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>python与java这对好基友</title>
    <link href="http://yoursite.com/2018/10/31/python%E4%B8%8Ejava%E8%BF%99%E5%AF%B9%E5%A5%BD%E5%9F%BA%E5%8F%8B/"/>
    <id>http://yoursite.com/2018/10/31/python与java这对好基友/</id>
    <published>2018-10-31T09:00:06.000Z</published>
    <updated>2019-01-24T09:17:06.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异同"><a href="#异同" class="headerlink" title="异同"></a>异同</h1><h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2><ol><li>都是面向对象</li><li>都可以跨平台</li><li>都是开源的</li><li>都是强类型语言：类型一旦决定了就不能随意更改。 比如 “3”+2，这是错误的。</li></ol><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><a id="more"></a><ol><li>python是全动态性的，可在运行时随时修改代码。 java则不行，tomcat的热部署也是tomcat额外实现的。java的变量是静态的，需要先声明再使用，而python是动态的，不需要提前声明。</li><li>python库很强大，不仅可以使用python，还可以使用C,C++设计，然后给python使用。java库相对没那么强大。</li><li>java运行效率高于python</li><li>java开发偏向于软件工程，团队协同。python则适合快速开发，小型团队。</li><li>java直接通过java虚拟机解释执行字节码（java字节码的设计使得它很容易转成机器码），python需要先编译成中间码，再解释成机器码。</li></ol><h1 id="python的一些特性"><a href="#python的一些特性" class="headerlink" title="python的一些特性"></a>python的一些特性</h1><h2 id="python的GIL"><a href="#python的GIL" class="headerlink" title="python的GIL"></a>python的GIL</h2><blockquote><p>每个线程在执行的过程中需要先获取GIL，保证同一时刻只能有一个线程在运行。</p></blockquote><p>通过以上描述，我们可以看出python不具备并行特性，所以它的并发需要通过多进程的部署方式来提升，以便充分利用多核cpu。</p><p>全局解释器锁，由于cPython虚拟机的原因，导致python的GIL难以移除，和python语言其实没有多少关系。如果想绕过这个限制，可以使用其他解释器，比如jpython，IronPython</p><h2 id="python为什么不像java那样需要定义接口"><a href="#python为什么不像java那样需要定义接口" class="headerlink" title="python为什么不像java那样需要定义接口"></a>python为什么不像java那样需要定义接口</h2><blockquote><p>python的动态性以及多继承特性使得它不需要接口。 而java的变量是静态的，也不支持多继承，所以java需要接口来增加它的扩展性</p></blockquote><p>因为python的变量是动态的，所以你无论参数传的是何种类型，都不会导致程序发生错误无法运行。传的是cat也好，dog也好，后端都可以很好的执行该对象的行为。</p><h1 id="python视频资料《疯狂的python》"><a href="#python视频资料《疯狂的python》" class="headerlink" title="python视频资料《疯狂的python》"></a>python视频资料《疯狂的python》</h1><blockquote><p>链接：<a href="https://pan.baidu.com/s/1brciek-xekinQVWlNrJaXw" target="_blank" rel="noopener">https://pan.baidu.com/s/1brciek-xekinQVWlNrJaXw</a><br>提取码：r4ip </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;异同&quot;&gt;&lt;a href=&quot;#异同&quot; class=&quot;headerlink&quot; title=&quot;异同&quot;&gt;&lt;/a&gt;异同&lt;/h1&gt;&lt;h2 id=&quot;共同点&quot;&gt;&lt;a href=&quot;#共同点&quot; class=&quot;headerlink&quot; title=&quot;共同点&quot;&gt;&lt;/a&gt;共同点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;都是面向对象&lt;/li&gt;
&lt;li&gt;都可以跨平台&lt;/li&gt;
&lt;li&gt;都是开源的&lt;/li&gt;
&lt;li&gt;都是强类型语言：类型一旦决定了就不能随意更改。 比如 “3”+2，这是错误的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;区别&quot;&gt;&lt;a href=&quot;#区别&quot; class=&quot;headerlink&quot; title=&quot;区别&quot;&gt;&lt;/a&gt;区别&lt;/h2&gt;
    
    </summary>
    
    
      <category term="主页" scheme="http://yoursite.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
</feed>
