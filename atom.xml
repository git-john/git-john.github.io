<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码农人生</title>
  
  <subtitle>技术博客，随笔，技术沉淀总结</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.readytran.com/"/>
  <updated>2019-02-19T09:15:25.358Z</updated>
  <id>http://blog.readytran.com/</id>
  
  <author>
    <name>John KANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lsyncd多目录同步</title>
    <link href="http://blog.readytran.com/2019/02/19/lsyncd%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.readytran.com/2019/02/19/lsyncd安装与配置/</id>
    <published>2019-02-19T08:02:38.000Z</published>
    <updated>2019-02-19T09:15:25.358Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装lsyncd"><a href="#安装lsyncd" class="headerlink" title="安装lsyncd"></a>安装lsyncd</h3><blockquote><p>lsyncd即Live Syncing Daemon，它是开源的数据实时同步工具(后台进程)，基于Linux2.6.3以后的inotify机制和rsync，安装方法如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y lsyncd lua lua-devel</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="lsyncd设置"><a href="#lsyncd设置" class="headerlink" title="lsyncd设置"></a>lsyncd设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">-- global setting</span><br><span class="line">---------------------------------------------------------------------------------settings</span><br><span class="line"></span><br><span class="line">settings&#123;</span><br><span class="line">        logfile         = &quot;/data/var/log/lsyncd/lsyncd.log&quot;,</span><br><span class="line">        statusFile      = &quot;/data/var/log/lsyncd/lsyncd.status&quot;,</span><br><span class="line">        inotifyMode     = &quot;CloseWrite&quot;,</span><br><span class="line">        maxProcesses    = 7</span><br><span class="line">        -- nodaemon     =true,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------settings</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------define</span><br><span class="line">-- host list，要同步的服务器列表</span><br><span class="line">servers = &#123;</span><br><span class="line">    &quot;xx.xx.xx.xx&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-- directory list </span><br><span class="line">dirpath = &#123;</span><br><span class="line">&quot;/data/www&quot;,</span><br><span class="line">&quot;/data/cmd&quot;,</span><br><span class="line">&quot;/data/local/tomcat8/conf&quot;,</span><br><span class="line">&quot;/data/local/nginx/conf&quot;,</span><br><span class="line">&quot;/etc/rsyslog.d&quot;</span><br><span class="line">&#125;</span><br><span class="line">---------------------------------------------------------------------------------define</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------action</span><br><span class="line">for _, srvip in ipairs(servers) do</span><br><span class="line">for _, dir in ipairs(dirpath) do</span><br><span class="line"></span><br><span class="line">sync &#123;</span><br><span class="line">    default.rsync,</span><br><span class="line">    source= dir,</span><br><span class="line">    target= &quot;webguest@&quot;..srvip..&quot;:&quot;..dir,</span><br><span class="line">    maxDelays= 5,</span><br><span class="line">    delay= 30,</span><br><span class="line">    exclude= &#123;&quot;*.tmp&quot;,&quot;Catalina&quot;&#125;,</span><br><span class="line">    rsync= &#123;</span><br><span class="line">binary          = &quot;/usr/bin/rsync&quot;,</span><br><span class="line">archive         = true,</span><br><span class="line">compress        = true,</span><br><span class="line">-- bwlimit         = 2000,</span><br><span class="line">rsh             = &quot;/usr/bin/ssh -p 10062 -o StrictHostKeyChecking=no -l webguest -i /home/webguest/.ssh/id_rsa_slb&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">---------------------------------------------------------------------------------action</span><br></pre></td></tr></table></figure><blockquote><p>以上实现的是通过shell脚本循环逻辑来做多目录的同步， 也可以简单的使用多个sync配置多个目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sync &#123;</span><br><span class="line">    default.rsync,</span><br><span class="line">    source= /data/www/xxdir,</span><br><span class="line">    target= &quot;webguest@xx.xx.xx.xx:/data/www/xxdir,</span><br><span class="line">    maxDelays= 5,</span><br><span class="line">    delay= 30,</span><br><span class="line">    exclude= &#123;&quot;*.tmp&quot;,&quot;Catalina&quot;&#125;,</span><br><span class="line">    rsync= &#123;</span><br><span class="line">binary          = &quot;/usr/bin/rsync&quot;,</span><br><span class="line">archive         = true,</span><br><span class="line">compress        = true,</span><br><span class="line">-- bwlimit         = 2000,</span><br><span class="line">rsh             = &quot;/usr/bin/ssh -p 10062 -o StrictHostKeyChecking=no -l webguest -i id_rsa&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">    default.rsync,</span><br><span class="line">    source= /data/www/xxdir2,</span><br><span class="line">    target= &quot;webguest@xx.xx.xx.xx:/data/www/xxdir2,</span><br><span class="line">    maxDelays= 5,</span><br><span class="line">    delay= 30,</span><br><span class="line">    exclude= &#123;&quot;*.tmp&quot;,&quot;Catalina&quot;&#125;,</span><br><span class="line">    rsync= &#123;</span><br><span class="line">binary          = &quot;/usr/bin/rsync&quot;,</span><br><span class="line">archive         = true,</span><br><span class="line">compress        = true,</span><br><span class="line">-- bwlimit         = 2000,</span><br><span class="line">rsh             = &quot;/usr/bin/ssh -p 10062 -o StrictHostKeyChecking=no -l webguest -i id_rsa&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p><a href="https://klionsec.github.io/2017/11/18/lsyncd/#menu" target="_blank" rel="noopener">https://klionsec.github.io/2017/11/18/lsyncd/#menu</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装lsyncd&quot;&gt;&lt;a href=&quot;#安装lsyncd&quot; class=&quot;headerlink&quot; title=&quot;安装lsyncd&quot;&gt;&lt;/a&gt;安装lsyncd&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;lsyncd即Live Syncing Daemon，它是开源的数据实时同步工具(后台进程)，基于Linux2.6.3以后的inotify机制和rsync，安装方法如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y lsyncd lua lua-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>mac,xcode快捷键大全</title>
    <link href="http://blog.readytran.com/2019/02/19/mac-xcode%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/"/>
    <id>http://blog.readytran.com/2019/02/19/mac-xcode快捷键大全/</id>
    <published>2019-02-19T07:49:35.000Z</published>
    <updated>2019-02-19T07:57:52.170Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mac文本操作"><a href="#mac文本操作" class="headerlink" title="mac文本操作"></a>mac文本操作</h3><ul><li>delete 向后删除</li><li>Fn+delete 向前删除</li><li>撤销： Command-z</li><li>回退：shift+command+z</li><li>剪切：command + x</li><li>copy：command + c</li><li>粘贴：command + v</li><li>全选：command + a</li><li>保存：command + s</li><li>查找：command + f<a id="more"></a></li><li>截取选中区域并保存到文件：command + shift + 4</li><li>截取全部屏幕并保存到文件：command + shift + 3</li><li>截取全部屏幕到剪贴板： command + shift + control + 3</li><li>打开强制退出窗口：command + option + esc</li><li>fn-上箭头 向上滚动一页（Page Up）</li><li>fn-下箭头 向下滚动一页（Page Down）　　</li><li>fn-左箭头 滚动至文稿开头（Home）　　</li><li>fn-右箭头 滚动至文稿末尾（End）　　</li><li>Command-右箭头 将光标移至当前行的行尾　　</li><li>Command-左箭头 将光标移至当前行的行首　　</li><li>Command-下箭头 将光标移至文稿末尾　　</li><li>Command-上箭头 将光标移至文稿开头　　</li><li>Option-右箭头 将光标移至下一个单词的末尾　　</li><li>Option-左箭头 将光标移至上一个单词的开头　　</li><li>Control-A 移至行或段落的开头</li></ul><h4 id="在Finder中："><a href="#在Finder中：" class="headerlink" title="在Finder中："></a>在Finder中：</h4><ul><li>Command-Option-V 剪切文件　　</li><li>Command-Shift-N 新建文件夹（New）　　　</li><li>Command-上箭头 打开包含当前文件夹的文件夹，相当于Windows里的“向上”　　</li><li>Command-Delete 将文件移至废纸篓　　</li><li>Command-Shift-Delete 清倒废纸篓　　</li><li>空格键 快速查看选中的文件，也就是预览功能</li></ul><h3 id="xcode调试"><a href="#xcode调试" class="headerlink" title="xcode调试"></a>xcode调试</h3><ul><li>运行与停止<blockquote><p>运行：command + r. 停止： command</p></blockquote></li><li>调试<blockquote><p>F6单步调试 | F7进入方法 | F8继续</p></blockquote></li></ul><h3 id="mac键盘符号图例"><a href="#mac键盘符号图例" class="headerlink" title="mac键盘符号图例"></a>mac键盘符号图例</h3><p><img src="../asset/img/mac_keyboard.jpg" alt="hexo image"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mac文本操作&quot;&gt;&lt;a href=&quot;#mac文本操作&quot; class=&quot;headerlink&quot; title=&quot;mac文本操作&quot;&gt;&lt;/a&gt;mac文本操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;delete 向后删除&lt;/li&gt;
&lt;li&gt;Fn+delete 向前删除&lt;/li&gt;
&lt;li&gt;撤销： Command-z&lt;/li&gt;
&lt;li&gt;回退：shift+command+z&lt;/li&gt;
&lt;li&gt;剪切：command + x&lt;/li&gt;
&lt;li&gt;copy：command + c&lt;/li&gt;
&lt;li&gt;粘贴：command + v&lt;/li&gt;
&lt;li&gt;全选：command + a&lt;/li&gt;
&lt;li&gt;保存：command + s&lt;/li&gt;
&lt;li&gt;查找：command + f
    
    </summary>
    
    
      <category term="工具" scheme="http://blog.readytran.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="http://blog.readytran.com/2019/02/18/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.readytran.com/2019/02/18/git常用命令/</id>
    <published>2019-02-18T09:01:31.000Z</published>
    <updated>2019-02-18T09:06:36.739Z</updated>
    
    <content type="html"><![CDATA[<ol><li>查看当前没有add 的内容修改</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><ol start="2"><li>查看已经add，没有commit的改动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="3"><li>查看当前没有add，没有commit的改动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff head </span><br><span class="line">或者 </span><br><span class="line">git status</span><br></pre></td></tr></table></figure><ol start="4"><li>查看任意两个版本之间的改动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff 版本号码1 版本号码2</span><br></pre></td></tr></table></figure><ol start="5"><li>比较两个版本号码的src 文件夹的差异</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff 版本号码1 版本号码2  src</span><br></pre></td></tr></table></figure><ol start="6"><li>删除git上的文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm test.txt</span><br></pre></td></tr></table></figure><blockquote><p>如果误删了本地test.txt想要从版本库还原到本地</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --test.txt</span><br></pre></td></tr></table></figure><ol start="7"><li>查看git历史提交（commit）记录</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">加上 --pretty=online 参数可以使得信息更简洁</span><br><span class="line">即：git log --pretty=online</span><br></pre></td></tr></table></figure><ol start="8"><li>版本穿梭</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. git reset --hard HEAD^</span><br><span class="line">git中当前版本用HEAD表示，^表示上一个版本。</span><br><span class="line">两个^^表示上上个版本，往上100个版本，就是100个^，</span><br><span class="line">也可以写成HEAD~100.也可以直接使用提交的commitid来回穿梭。</span><br><span class="line">2. git reflog查看命令历史. git log查看提交历史</span><br><span class="line">3. git log查看提交历史</span><br><span class="line">4.git diff 比较的是工作区文件与暂存区文件的区别（上次git add 的内容）</span><br><span class="line">5.git diff --cached 比较的是暂存区的文件与仓库分支里（上次git commit 后的内容）的区别</span><br></pre></td></tr></table></figure><h2 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h2><hr><h4 id="git-pull-vs-git-fetch-vs-git-remote-update"><a href="#git-pull-vs-git-fetch-vs-git-remote-update" class="headerlink" title="git pull vs git fetch vs git remote update"></a>git pull vs git fetch vs git remote update</h4><hr><ul><li>git remote update will update all of your branches set to track remote ones, but not merge any changes in.</li><li>git fetch will update only the branch you’re on, but not merge any changes in.</li><li>git pull will update and merge any remote changes of the current branch you’re on. This would be the one you use to update a local branch.</li></ul><h2 id="Command-line-instructions"><a href="#Command-line-instructions" class="headerlink" title="Command line instructions"></a>Command line instructions</h2><ul><li>Git global setup</li><li>git config –global user.name “康强”</li><li>git config –global user.email “<a href="mailto:kangqiang@k3k.com" target="_blank" rel="noopener">kangqiang@k3k.com</a>“</li></ul><h3 id="Create-a-new-repository"><a href="#Create-a-new-repository" class="headerlink" title="Create a new repository"></a>Create a new repository</h3><ul><li>git clone ssh:<a href="mailto://git@gd.k3k.com" target="_blank" rel="noopener">//git@gd.k3k.com</a>:13303/kangqiang/ios_aihaoquan.git</li><li>cd ios_aihaoquan</li><li>touch README.md</li><li>git add README.md</li><li>git commit -m “add README”</li><li>git push -u origin master</li></ul><h3 id="Existing-folder"><a href="#Existing-folder" class="headerlink" title="Existing folder"></a>Existing folder</h3><ul><li>cd existing_folder</li><li>git init</li><li>git remote add origin ssh:<a href="mailto://git@gd.k3k.com" target="_blank" rel="noopener">//git@gd.k3k.com</a>:13303/kangqiang/ios_aihaoquan.git</li><li>git add .</li><li>git commit -m “Initial commit”</li><li>git push -u origin master</li></ul><h3 id="Existing-Git-repository"><a href="#Existing-Git-repository" class="headerlink" title="Existing Git repository"></a>Existing Git repository</h3><ul><li>cd existing_repo</li><li>git remote rename origin old-origin</li><li>git remote add origin ssh:<a href="mailto://git@gd.k3k.com" target="_blank" rel="noopener">//git@gd.k3k.com</a>:13303/kangqiang/ios_aihaoquan.git</li><li>git push -u origin –all</li><li>git push -u origin –tags</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.kancloud.cn/xiak/github/218507" target="_blank" rel="noopener">https://www.kancloud.cn/xiak/github/218507</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></li><li><a href="https://learngitbranching.js.org/?demo" target="_blank" rel="noopener">https://learngitbranching.js.org/?demo</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;查看当前没有add 的内容修改&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;查看已经add，没有commit的改动&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff --cached&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://blog.readytran.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>定时任务检测进程</title>
    <link href="http://blog.readytran.com/2019/02/18/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%A3%80%E6%B5%8B%E8%BF%9B%E7%A8%8B/"/>
    <id>http://blog.readytran.com/2019/02/18/定时任务检测进程/</id>
    <published>2019-02-18T08:59:18.000Z</published>
    <updated>2019-02-18T08:59:57.387Z</updated>
    
    <content type="html"><![CDATA[<h6 id="php网站总是无法访问，重启php-fpm进程后可以访问。"><a href="#php网站总是无法访问，重启php-fpm进程后可以访问。" class="headerlink" title="php网站总是无法访问，重启php-fpm进程后可以访问。"></a><p>php网站总是无法访问，重启php-fpm进程后可以访问。</p></h6><p>为了避免麻烦,写了个守护进程监控，当发现端口无法telnet后，杀掉进程重启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#check php-fpm server up/down</span><br><span class="line">TelLog=/home/xcguest/telphp.log</span><br><span class="line">/usr/bin/telnet 127.0.0.1 9000 &lt;&lt; ! &gt; $TelLog</span><br><span class="line">quit</span><br><span class="line">!</span><br><span class="line">SOK=`cat $TelLog | grep &quot;Escape character&quot; |wc -l`</span><br><span class="line">if [ $SOK -eq 1 ];then</span><br><span class="line">  echo &quot;php-fpm is ok&quot;</span><br><span class="line">else</span><br><span class="line">  killall -9 php-fpm</span><br><span class="line">  sleep 1</span><br><span class="line">  /usr/local/php/sbin/php-fpm</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><blockquote><ol><li>保存为php_monitor.sh后；</li><li>执行chmod +x 使得脚本拥有执行权限。</li><li>执行crontab -e， 添加定时脚本每分钟检查一次<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /home/xcguest/php_check.sh</span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;php网站总是无法访问，重启php-fpm进程后可以访问。&quot;&gt;&lt;a href=&quot;#php网站总是无法访问，重启php-fpm进程后可以访问。&quot; class=&quot;headerlink&quot; title=&quot;php网站总是无法访问，重启php-fpm进程后可以访问。&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="工具" scheme="http://blog.readytran.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="http://blog.readytran.com/2019/02/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://blog.readytran.com/2019/02/18/科学上网/</id>
    <published>2019-02-18T08:37:10.000Z</published>
    <updated>2019-02-18T08:43:58.060Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><blockquote><p>centos 6.65</p></blockquote><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>安装python： <blockquote><p>yum install python-setuptools</p></blockquote></li><li>安装wget：<blockquote><p>yum install wget</p></blockquote></li><li>安装pip：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz --no-check-certificate</span><br><span class="line">tar -xzvf pip-1.3.1.tar.gz</span><br><span class="line">cd pip-1.3.1</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></li></ul><p>也可直接使用 easy_install pip</p><a id="more"></a><ul><li>安装shadowsocks <blockquote><p>pip install shadowsocks</p></blockquote></li></ul><h4 id="配置shadowsocks"><a href="#配置shadowsocks" class="headerlink" title="配置shadowsocks"></a>配置shadowsocks</h4><blockquote><p>vi /etc/shadowsocks.json</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;: 1080,</span><br><span class="line">    &quot;server_port&quot;: 8888,</span><br><span class="line">    &quot;password&quot;: &quot;dsfad&quot;,</span><br><span class="line">    &quot;timeout&quot;: 600,</span><br><span class="line">    &quot;method&quot;: &quot;rc4-md5&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><blockquote><p>ssserver -c /etc/shadowsocks.json -d start</p></blockquote><h2 id="ss-与-ssr"><a href="#ss-与-ssr" class="headerlink" title="ss 与 ssr"></a>ss 与 ssr</h2><p>以上我们搭建的是ss（shadowsocks）， 目前ss的作者已经不维护了。 而ssr 是ss的增强版本， 下次搭建科学上网的时候可以考虑使用该工具进行搭建。 搭建方法参考如下链接：</p><p><a href="https://wxnacy.com/2019/02/07/linux-install-ssr/#more" target="_blank" rel="noopener">https://wxnacy.com/2019/02/07/linux-install-ssr/#more</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;centos 6.65&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;安装python： &lt;blockquote&gt;
&lt;p&gt;yum install python-setuptools&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;安装wget：&lt;blockquote&gt;
&lt;p&gt;yum install wget&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;安装pip：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz --no-check-certificate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xzvf pip-1.3.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd pip-1.3.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也可直接使用 easy_install pip&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://blog.readytran.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>年度总结与来年展望</title>
    <link href="http://blog.readytran.com/2019/01/24/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%E4%B8%8E%E6%9D%A5%E5%B9%B4%E5%B1%95%E6%9C%9B/"/>
    <id>http://blog.readytran.com/2019/01/24/年度总结与来年展望/</id>
    <published>2019-01-24T15:33:10.000Z</published>
    <updated>2019-01-24T09:21:54.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2018年度总结"><a href="#2018年度总结" class="headerlink" title="2018年度总结"></a>2018年度总结</h3><p>2018年已经过去了，2019的春节也在下周就要进入回老家过年模式了。2018年公司业绩持续下滑，工资也发不起，在这样的背景下<span style="background-color: yellow;">CEO &amp; CTO </span>突然宣布要单干，弄下一堆龌龊事，丢下一堆没交接的工作让我们剩下的人去摸索，个中详情堪比宫斗。具体情况也就不多言了，是枭雄也好，是小人也罢，都让它留在2018的岁月里，2018的人生经历中<a id="more"></a></p><p>回顾在他领导的公司文化下工作的这将近四年，觉得自己真是脑子秀逗。<span style="background-color: yellow;">公司管理混乱；ceo脾气暴躁，动辄咆哮；技术不被认可；做着边缘工作，技术得不到提升；经常要加班到很晚，经常要凌晨两三点起床做技术support；</span>就这样的环境我愣是呆了将近四年，刚开始的时候居然还能满怀激情，在别人发着大把奖金的情况下我也能心平气和。现在回头想想，只是因为老板会画饼，因为给我0。5的股份承诺，我将公司当成了一个可以长远发展的平台。事实证明，如果自身能力得不到提升，一切都是虚妄,别人想抛弃你就抛弃你。</p><p>其实回顾这工作的10年来， 我都在自己作，没有长远的规划，从来也没想过要进大公司，都是在得过且过，每思及此， 都要顿首懊恼。 往事已经不可追， 未来还是要期一下的。 未来需要努力提升自己，从身体上，修养上，知识技能上。</p><h3 id="2019年度计划"><a href="#2019年度计划" class="headerlink" title="2019年度计划"></a>2019年度计划</h3><p>2019年需要努力提升自己的技能包。希望下一个10年从2019做起，即使不能富贵也需要拒绝做中年油腻男，拒绝做被别人调侃的对象。以下为2019年的年度学习，生活计划。时间：~2010-01-01</p><ul><li>每周学习100个以上英语单词 （25*4+）</li><li>码农沉淀计划 - 每周三篇以上gitpage博客。 内容主要为：<blockquote><p>英语系列， 面试题目系列， 设计模式系列， jvm系列， linux系列</p></blockquote></li><li>找一份比较满意的工作</li><li>博客园开通博客，写一些高质量博客</li><li>开通个人服务号，打造个人品牌</li><li>阅读8本技术书籍</li><li>带着我的大小宝贝出门旅游</li><li>每周至少健身一次</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2018年度总结&quot;&gt;&lt;a href=&quot;#2018年度总结&quot; class=&quot;headerlink&quot; title=&quot;2018年度总结&quot;&gt;&lt;/a&gt;2018年度总结&lt;/h3&gt;&lt;p&gt;2018年已经过去了，2019的春节也在下周就要进入回老家过年模式了。2018年公司业绩持续下滑，工资也发不起，在这样的背景下&lt;span style=&quot;background-color: yellow;&quot;&gt;CEO &amp;amp; CTO &lt;/span&gt;突然宣布要单干，弄下一堆龌龊事，丢下一堆没交接的工作让我们剩下的人去摸索，个中详情堪比宫斗。具体情况也就不多言了，是枭雄也好，是小人也罢，都让它留在2018的岁月里，2018的人生经历中
    
    </summary>
    
    
      <category term="主页" scheme="http://blog.readytran.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
      <category term="年度总结" scheme="http://blog.readytran.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>关于https证书</title>
    <link href="http://blog.readytran.com/2019/01/15/%E5%85%B3%E4%BA%8Ehttps%E8%AF%81%E4%B9%A6/"/>
    <id>http://blog.readytran.com/2019/01/15/关于https证书/</id>
    <published>2019-01-15T15:24:38.000Z</published>
    <updated>2019-02-18T08:44:39.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于https证书"><a href="#关于https证书" class="headerlink" title="关于https证书"></a>关于https证书</h1><ul><li>https协议需要到ca申请证书，一般免费证书很少，需要交费。</li><li>http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。</li><li>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</li><li>http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全</li></ul><blockquote><p>苹果宣布了一个最后期限：到2017年1月1日 App Store中的所有应用都必须启用 App Transport Security安全功能。App Transport Security（ATS）是苹果在iOS 9中引入的一项隐私保护功能，屏蔽明文HTTP资源加载，连接必须经过更安全的HTTPS。苹果目前允许开发者暂时关闭ATS，可以继续使用HTTP连接，但到年底所有官方商店的应用都必须强制性使用ATS.<br><br>所以，推行https是整个互联网行业的趋势.<br><a id="more"></a></p></blockquote><h1 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h1><blockquote><p>目前主流的SSL证书主要分为DV SSL 、 OV SSL 、EV SSL</p></blockquote><h2 id="DV-SSL"><a href="#DV-SSL" class="headerlink" title="DV SSL"></a>DV SSL</h2><p>DV SSL证书是只验证网站域名所有权的简易型（Class 1级）SSL证书，可10分钟快速颁发，能起到加密传输的作用，但无法向用户证明网站的真实身份。<br>目前市面上的免费证书都是这个类型的，只是提供了对数据的加密，但是对提供证书的个人和机构的身份不做验证。</p><h2 id="OV-SSL"><a href="#OV-SSL" class="headerlink" title="OV SSL"></a>OV SSL</h2><p>OV SSL,提供加密功能,对申请者做严格的身份审核验证,提供可信身份证明。<br>和DV SSL的区别在于，OV SSL 提供了对个人或者机构的审核，能确认对方的身份，安全性更高。<br>所以这部分的证书申请是收费的~</p><h2 id="EV-SSL"><a href="#EV-SSL" class="headerlink" title="EV SSL"></a>EV SSL</h2><p>超安=EV=最安全、最严格 超安EV SSL证书遵循全球统一的严格身份验证标准，是目前业界安全级别最高的顶级 (Class 4级)SSL证书。<br>金融证券、银行、第三方支付、网上商城等，重点强调网站安全、企业可信形象的网站，涉及交易支付、客户隐私信息和账号密码的传输。<br>这部分的验证要求最高，申请费用也是最贵的。</p><h1 id="常见的颁发证书机构"><a href="#常见的颁发证书机构" class="headerlink" title="常见的颁发证书机构"></a>常见的颁发证书机构</h1><ul><li>赛门铁克(Symantec)是 SSL/TLS 证书的领先提供商</li><li>中国金融认证中心(CFCA)全球信任SSL证书</li><li>GeoTrust是全球第二大数字证书颁发机构</li><li></li></ul><blockquote><p>转自： <a href="https://www.cnblogs.com/Javi/p/6479577.html" target="_blank" rel="noopener">https://www.cnblogs.com/Javi/p/6479577.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于https证书&quot;&gt;&lt;a href=&quot;#关于https证书&quot; class=&quot;headerlink&quot; title=&quot;关于https证书&quot;&gt;&lt;/a&gt;关于https证书&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;https协议需要到ca申请证书，一般免费证书很少，需要交费。&lt;/li&gt;
&lt;li&gt;http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。&lt;/li&gt;
&lt;li&gt;http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。&lt;/li&gt;
&lt;li&gt;http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;苹果宣布了一个最后期限：到2017年1月1日 App Store中的所有应用都必须启用 App Transport Security安全功能。App Transport Security（ATS）是苹果在iOS 9中引入的一项隐私保护功能，屏蔽明文HTTP资源加载，连接必须经过更安全的HTTPS。苹果目前允许开发者暂时关闭ATS，可以继续使用HTTP连接，但到年底所有官方商店的应用都必须强制性使用ATS.&lt;br&gt;&lt;br&gt;所以，推行https是整个互联网行业的趋势.&lt;br&gt;
    
    </summary>
    
    
      <category term="主页" scheme="http://blog.readytran.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>python与java这对好基友</title>
    <link href="http://blog.readytran.com/2018/10/31/python%E4%B8%8Ejava%E8%BF%99%E5%AF%B9%E5%A5%BD%E5%9F%BA%E5%8F%8B/"/>
    <id>http://blog.readytran.com/2018/10/31/python与java这对好基友/</id>
    <published>2018-10-31T09:00:06.000Z</published>
    <updated>2019-01-24T09:17:06.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异同"><a href="#异同" class="headerlink" title="异同"></a>异同</h1><h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2><ol><li>都是面向对象</li><li>都可以跨平台</li><li>都是开源的</li><li>都是强类型语言：类型一旦决定了就不能随意更改。 比如 “3”+2，这是错误的。</li></ol><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><a id="more"></a><ol><li>python是全动态性的，可在运行时随时修改代码。 java则不行，tomcat的热部署也是tomcat额外实现的。java的变量是静态的，需要先声明再使用，而python是动态的，不需要提前声明。</li><li>python库很强大，不仅可以使用python，还可以使用C,C++设计，然后给python使用。java库相对没那么强大。</li><li>java运行效率高于python</li><li>java开发偏向于软件工程，团队协同。python则适合快速开发，小型团队。</li><li>java直接通过java虚拟机解释执行字节码（java字节码的设计使得它很容易转成机器码），python需要先编译成中间码，再解释成机器码。</li></ol><h1 id="python的一些特性"><a href="#python的一些特性" class="headerlink" title="python的一些特性"></a>python的一些特性</h1><h2 id="python的GIL"><a href="#python的GIL" class="headerlink" title="python的GIL"></a>python的GIL</h2><blockquote><p>每个线程在执行的过程中需要先获取GIL，保证同一时刻只能有一个线程在运行。</p></blockquote><p>通过以上描述，我们可以看出python不具备并行特性，所以它的并发需要通过多进程的部署方式来提升，以便充分利用多核cpu。</p><p>全局解释器锁，由于cPython虚拟机的原因，导致python的GIL难以移除，和python语言其实没有多少关系。如果想绕过这个限制，可以使用其他解释器，比如jpython，IronPython</p><h2 id="python为什么不像java那样需要定义接口"><a href="#python为什么不像java那样需要定义接口" class="headerlink" title="python为什么不像java那样需要定义接口"></a>python为什么不像java那样需要定义接口</h2><blockquote><p>python的动态性以及多继承特性使得它不需要接口。 而java的变量是静态的，也不支持多继承，所以java需要接口来增加它的扩展性</p></blockquote><p>因为python的变量是动态的，所以你无论参数传的是何种类型，都不会导致程序发生错误无法运行。传的是cat也好，dog也好，后端都可以很好的执行该对象的行为。</p><h1 id="python视频资料《疯狂的python》"><a href="#python视频资料《疯狂的python》" class="headerlink" title="python视频资料《疯狂的python》"></a>python视频资料《疯狂的python》</h1><blockquote><p>链接：<a href="https://pan.baidu.com/s/1brciek-xekinQVWlNrJaXw" target="_blank" rel="noopener">https://pan.baidu.com/s/1brciek-xekinQVWlNrJaXw</a><br>提取码：r4ip </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;异同&quot;&gt;&lt;a href=&quot;#异同&quot; class=&quot;headerlink&quot; title=&quot;异同&quot;&gt;&lt;/a&gt;异同&lt;/h1&gt;&lt;h2 id=&quot;共同点&quot;&gt;&lt;a href=&quot;#共同点&quot; class=&quot;headerlink&quot; title=&quot;共同点&quot;&gt;&lt;/a&gt;共同点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;都是面向对象&lt;/li&gt;
&lt;li&gt;都可以跨平台&lt;/li&gt;
&lt;li&gt;都是开源的&lt;/li&gt;
&lt;li&gt;都是强类型语言：类型一旦决定了就不能随意更改。 比如 “3”+2，这是错误的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;区别&quot;&gt;&lt;a href=&quot;#区别&quot; class=&quot;headerlink&quot; title=&quot;区别&quot;&gt;&lt;/a&gt;区别&lt;/h2&gt;
    
    </summary>
    
    
      <category term="主页" scheme="http://blog.readytran.com/tags/%E4%B8%BB%E9%A1%B5/"/>
    
      <category term="python" scheme="http://blog.readytran.com/tags/python/"/>
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
</feed>
