<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>johnkang&#39;s blog</title>
  
  <subtitle>最好的学习时机是工作前三年与现在</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.readytran.com/"/>
  <updated>2019-04-21T08:43:42.878Z</updated>
  <id>http://blog.readytran.com/</id>
  
  <author>
    <name>John KANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql学习笔记</title>
    <link href="http://blog.readytran.com/2019/04/21/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/04/21/mysql学习笔记/</id>
    <published>2019-04-21T06:39:11.000Z</published>
    <updated>2019-04-21T08:43:42.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql索引"><a href="#mysql索引" class="headerlink" title="mysql索引"></a>mysql索引</h1><p>为了快速定位到mysql存储的某张表，某行记录，以便进行查询与修改， 我们需要将数据以一定的数据结构进行存储，这个数据结构就是我们说的索引。能够支持快速查找的数据结构有： <strong>顺序数组，哈希， 搜索树。</strong></p><pre><code>数组结构：要求插入的时候保证有序， 这样可以使用二分查找达到O(logN)的时间复杂度。 但是数组有一个缺点，插入数据时需要移动数据以便保证有序，时间复杂度为 O(N)。所以有序数组只适合静态数据，不适合经常变动的数据。为什么不使用链表来存储？这是因为操作系统以4kb作为一个数据页进行数据读取，mysql以16kb作为一个数据块来读取。已经读取过的数据块会在内存中缓存。 如果多次读取的数据在同一个数据库，那么就只需要一次磁盘IO。而如果顺序一致的记录在文件中也是顺序存储的，就可以一次读取多个数据块(不理解这个)，这样查询范围的速度就可以大大提升。哈希结构：类似于jdk的hashmap，哈希表通过一个特定的哈希函数将key值转换为一个固定的地址，然后将对应的value放到这个位置。如果发生哈希碰撞，就在当前位置拉出一个链表。由于哈希函数的离散特性，经过哈希函数处理后的key将失去原有顺序，所以它无法满足范围查询，只适合等值查询的情况，如一些缓存的场景。树结构：二叉树如果只有左子节点或只有右子节点， 则变成了一个线性结构，所以为了维持Olog（N）的查询时间复杂度， 平衡二叉树的插入时间复杂度也是 O（log（N））。二叉树如果只有两个子节点，在数据量很大的情况下，树高就会很高，树的每一层一般不在一个数据块进行存储。为了尽量的减少磁盘读写， 我们采用N叉树来代替二叉树，mysql的N为1200，这样在树高为4的情况下也能存储上亿级别的数据，而且前面两层一般都存储在内存中。mysql中用到的B+树一般用非叶子节点构建索引，用叶子节点来存储具体的数据。</code></pre><p>InnoDB中，有聚簇索引与普通索引之分。</p><pre><code>聚簇索引根据主键来构建，叶子节点存放的是行数据。 普通索引是根据声明索引时候的列来构建，叶子节点存放的是数据行的主键。普通索引还有唯一索引和联合索引两个特例。唯一索引会在插入和修改的时候对列值进行判断是否存在，联合索引则会按建立索引的先后顺序进行列值拼接，然后构建索引。</code></pre><p>所以我们知道了按普通索引查询会先查出主键索引，然后查出对应的行数据。 这个过程我们称为回表。如果我们对要查询的字段都加入到了一个联合索引，这种查询不需要进行回表，直接从索引中就可以读取到值，这种我们称为覆盖索引。</p><p>索引的一些注意点。</p><pre><code>如果在索引上用到了函数，将导致无法用到之前创建的索引。索引遵循最左匹配原则查询以某个字符串开头，能用到索引，查询是否包含某个字符串将用不到索引，此时可以使用全文索引。联合索引根据第一个列查询可以用到索引，仅仅根据第二个列将无法用到索引查询的时候用 IN 的效率高于 NOT =建议将索引的列设置为非空，这个和 NULL 字段的存储有关</code></pre><h2 id="问题：-为什么我们不建议使用订单号来作为订单表的主键？"><a href="#问题：-为什么我们不建议使用订单号来作为订单表的主键？" class="headerlink" title="问题： 为什么我们不建议使用订单号来作为订单表的主键？"></a>问题： 为什么我们不建议使用订单号来作为订单表的主键？</h2><ol><li>因为普通索引的叶子节点存储的是主键的值，而订单号一般都很长，这样会导致普通索引会占用很大的物理空间。</li><li>一般我们使用自增id来作为主键，连续性较好， 这样相邻的两条记录会很大概率在同一个数据块上。可以减少磁盘的读取次数。</li></ol><h1 id="存储格式"><a href="#存储格式" class="headerlink" title="存储格式"></a>存储格式</h1><p>InnoDB逻辑存储结构从大到小可分为：表空间，段，区，页，行。如图</p><p><img src="../asset/img/mysql_storage.jpg" alt="存储格式"></p><pre><code>表空间作为存储结构的最高层，所有数据都存放在表空间中，默认情况下用一个共享表空间 ibdata1 ，如果开启了 innodb_file_per_table 则每张表的数据将存储在单独的表空间中，也就是每张表都会有一个文件表空间由各个段构成，InnoDB存储引擎由索引组织的，而索引中的叶子节点用来记录数据，存储在数据段，而非叶子节点用来构建索引，存储在索引段，而回滚段我们在后面分析锁的时候在聊区是由连续的页组成，任何情况下一个区都是 1MB。一个区中可以有多个页，每个页默认16kb，所以默认情况下，一个区有64个连续的页。页的大小可以根据innodb_page_size设置。数据页存储的是具体的数据行记录。一行记录最终以二进制的形式存储到文件中。所以我们要能够解析出一行数据的各个列的值就需要按规定格式来存储数据行数据。</code></pre><p><img src="../asset/img/row_storage.png" alt="行数据存储格式"></p><ul><li><p>变长字段长度列表，该位置用来存储所申明的变长字段中非空字段实际占有的长度列表，例如有3个非空字段，其中第一个字段长度为3，第二个字段为空，<em>第三个字段长度为1，则将用 01 03 表示</em>（<font color="red">倒序存放</font>），为空字段将在下一个位置进行标记。变长字段长度不能超过 2 个字节，所以 varchar 的长度最大为 65535</p></li><li><p>NULL 标志位，占 1 个字节，如果对应的列为空则在对应的位上置为 1 ，否则为 0 ，由于该标志位占一个字节，所以列的数量不能超过 255。如果某字段为空，在后面具体的列数据中将不会在记录。这种方式也导致了在处理索引字段为空的时候需要进行额外的操作</p></li><li><p>记录头信息，固定占 5 字节，包含下一条记录的位置，该行记录总长度，记录类型，是否被删除，对应的 slot 信息等</p></li><li><p>列数据 包含具体的列对应的值，加上两个隐藏列，事务 ID 列和回滚指针列。如果没有申明主键，还会增加一列记录内部 ID（<font color="red">这就是隐式主键了</font>）</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql索引&quot;&gt;&lt;a href=&quot;#mysql索引&quot; class=&quot;headerlink&quot; title=&quot;mysql索引&quot;&gt;&lt;/a&gt;mysql索引&lt;/h1&gt;&lt;p&gt;为了快速定位到mysql存储的某张表，某行记录，以便进行查询与修改， 我们需要将数据以一定的数据结构
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://blog.readytran.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>设计模式六大原则</title>
    <link href="http://blog.readytran.com/2019/04/18/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%AD%E5%A4%A7%E5%8E%9F%E5%88%99/"/>
    <id>http://blog.readytran.com/2019/04/18/设计模式六大原则/</id>
    <published>2019-04-18T06:18:31.000Z</published>
    <updated>2019-04-18T06:34:05.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式六大原则"><a href="#设计模式六大原则" class="headerlink" title="设计模式六大原则"></a>设计模式六大原则</h1><ul><li><p>开闭原则（Open Close Principle）</p><p>  开闭原则的意思是： <strong>对扩展开放，对修改关闭</strong>。 在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简而言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，需要使用接口和抽象类</p></li><li><p>里氏代换原则（Liskov Substitution Principle）</p><p>  里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范</p></li><li><p>依赖倒转原则（Dependence Inversion Principle）</p><p>  这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体</p></li><li><p>接口隔离原则（Interface Segregation Principle）</p><p>  这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p></li><li><p>迪米特法则，又称最少知道原则（Demeter Principle）</p><p>  最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p></li><li><p>合成复用原则（Composite Reuse Principle）</p><p>  合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式六大原则&quot;&gt;&lt;a href=&quot;#设计模式六大原则&quot; class=&quot;headerlink&quot; title=&quot;设计模式六大原则&quot;&gt;&lt;/a&gt;设计模式六大原则&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开闭原则（Open Close Principle）&lt;/p&gt;
&lt;p&gt;  开
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>踩坑问题收集</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%B8%A9%E5%9D%91%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <id>http://blog.readytran.com/2019/04/12/踩坑问题收集/</id>
    <published>2019-04-12T08:52:41.000Z</published>
    <updated>2019-04-12T08:57:59.580Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS安装、配置APR和tomcat-native</p><pre><code>Tomcat可以使用APR来提供超强的可伸缩性和性能，更好地集成本地服务器技术。APR(Apache Portable Runtime)是一个高可移植库，它是Apache HTTP Server 2.x的核心。APR有很多用途，包括访问高级IO功能(例如sendfile,epoll和OpenSSL)，OS级别功能(随机数生成，系统状态等等)，本地进程管理(共享内存，NT管道和UNIX sockets)。所以我们需要配置tomcat native来加强tomcat性能，具体安装配置方法  `https://blog.csdn.net/ClementAD/article/details/47320037`</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CentOS安装、配置APR和tomcat-native&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tomcat可以使用APR来提供超强的可伸缩性和性能，更好地集成本地服务器技术。APR(Apache Portable Runtime)是一个高可移植库，它是Apache HTTP Se
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>资源收集- 一大波资源，需要的加我微信 juegu007</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/"/>
    <id>http://blog.readytran.com/2019/04/12/资源收集/</id>
    <published>2019-04-12T07:06:19.000Z</published>
    <updated>2019-04-19T02:11:53.518Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>认识systemd</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%AE%A4%E8%AF%86systemd/"/>
    <id>http://blog.readytran.com/2019/04/12/认识systemd/</id>
    <published>2019-04-12T03:24:49.000Z</published>
    <updated>2019-04-12T03:43:09.457Z</updated>
    
    <content type="html"><![CDATA[<p>Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置</p><h1 id="由来"><a href="#由来" class="headerlink" title="由来"></a>由来</h1><p>历史上，Linux 的启动一直采用init进程，<code>sudo /etc/init.d/apache2 start</code>。</p><p>这种方法有两个缺点。</p><pre><code>启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。</code></pre><a id="more"></a><h1 id="Systemd-概述"><a href="#Systemd-概述" class="headerlink" title="Systemd 概述"></a>Systemd 概述</h1><p>Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。</p><p>根据 Linux 惯例，字母d是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就是它要守护整个系统</p><p>Systemd 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂</p><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><p>Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面</p><h2 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h2><p><code>systemctl</code> 是 <code>Systemd</code> 的主命令，用于管理系统.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 重启系统</span><br><span class="line">$ sudo systemctl reboot</span><br><span class="line"></span><br><span class="line"># 关闭系统，切断电源</span><br><span class="line">$ sudo systemctl poweroff</span><br><span class="line"></span><br><span class="line"># CPU停止工作</span><br><span class="line">$ sudo systemctl halt</span><br><span class="line"></span><br><span class="line"># 暂停系统</span><br><span class="line">$ sudo systemctl suspend</span><br><span class="line"></span><br><span class="line"># 让系统进入冬眠状态</span><br><span class="line">$ sudo systemctl hibernate</span><br><span class="line"></span><br><span class="line"># 让系统进入交互式休眠状态</span><br><span class="line">$ sudo systemctl hybrid-sleep</span><br><span class="line"></span><br><span class="line"># 启动进入救援状态（单用户状态）</span><br><span class="line">$ sudo systemctl rescue</span><br></pre></td></tr></table></figure><h2 id="systemd-analyze"><a href="#systemd-analyze" class="headerlink" title="systemd-analyze"></a>systemd-analyze</h2><p>systemd-analyze命令用于查看启动耗时。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看启动耗时</span><br><span class="line">$ systemd-analyze </span><br><span class="line"></span><br><span class="line"># 查看每个服务的启动耗时</span><br><span class="line">$ systemd-analyze blame</span><br><span class="line"></span><br><span class="line"># 显示瀑布状的启动过程流</span><br><span class="line">$ systemd-analyze critical-chain</span><br><span class="line"></span><br><span class="line"># 显示指定服务的启动流</span><br><span class="line">$ systemd-analyze critical-chain atd.service</span><br></pre></td></tr></table></figure><h2 id="hostnamectl"><a href="#hostnamectl" class="headerlink" title="hostnamectl"></a>hostnamectl</h2><p>hostnamectl命令用于查看当前主机的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前主机的信息</span><br><span class="line">$ hostnamectl</span><br><span class="line"></span><br><span class="line"># 设置主机名。</span><br><span class="line">$ sudo hostnamectl set-hostname rhel7</span><br></pre></td></tr></table></figure><h2 id="localectl"><a href="#localectl" class="headerlink" title="localectl"></a>localectl</h2><p>localectl命令用于查看本地化设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查看本地化设置</span><br><span class="line">$ localectl</span><br><span class="line"></span><br><span class="line"># 设置本地化参数。</span><br><span class="line">$ sudo localectl set-locale LANG=en_GB.utf8</span><br><span class="line">$ sudo localectl set-keymap en_GB</span><br></pre></td></tr></table></figure><h2 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h2><p>timedatectl命令用于查看当前时区设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前时区设置</span><br><span class="line">$ timedatectl</span><br><span class="line"></span><br><span class="line"># 显示所有可用的时区</span><br><span class="line">$ timedatectl list-timezones</span><br><span class="line"></span><br><span class="line"># 设置当前时区</span><br><span class="line">$ sudo timedatectl set-timezone America/New_York</span><br><span class="line">$ sudo timedatectl set-time YYYY-MM-DD</span><br><span class="line">$ sudo timedatectl set-time HH:MM:SS</span><br></pre></td></tr></table></figure><h2 id="loginctl"><a href="#loginctl" class="headerlink" title="loginctl"></a>loginctl</h2><p>loginctl命令用于查看当前登录的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出当前session</span><br><span class="line">$ loginctl list-sessions</span><br><span class="line"></span><br><span class="line"># 列出当前登录用户</span><br><span class="line">$ loginctl list-users</span><br><span class="line"></span><br><span class="line"># 列出显示指定用户的信息</span><br><span class="line">$ loginctl show-user ruanyf</span><br></pre></td></tr></table></figure><h1 id="Unit"><a href="#Unit" class="headerlink" title="Unit"></a>Unit</h1><p>Systemd 可以管理所有系统资源。不同的资源统称为 Unit（单位）。</p><pre><code>1. Service unit：系统服务2. Target unit：多个 Unit 构成的一个组3. Device Unit：硬件设备4. Mount Unit：文件系统的挂载点5. Automount Unit：自动挂载点6. Path Unit：文件或路径7. Scope Unit：不是由 Systemd 启动的外部进程8. Slice Unit：进程组9. Snapshot Unit：Systemd 快照，可以切回某个快照10. Socket Unit：进程间通信的 socket11. Swap Unit：swap 文件12. Timer Unit：定时器</code></pre><h1 id="Unit-的配置文件"><a href="#Unit-的配置文件" class="headerlink" title="Unit 的配置文件"></a>Unit 的配置文件</h1><p>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit 。</p><p>Systemd 默认从目录/etc/systemd/system/读取配置文件。但是，里面存放的大部分文件都是符号链接，指向目录/usr/lib/systemd/system/，真正的配置文件存放在那个目录。</p><p>systemctl enable命令用于在上面两个目录之间，建立符号链接关系</p><p><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置&lt;/p&gt;
&lt;h1 id=&quot;由来&quot;&gt;&lt;a href=&quot;#由来&quot; class=&quot;headerlink&quot; title=&quot;由来&quot;&gt;&lt;/a&gt;由来&lt;/h1&gt;&lt;p&gt;历史上，Linux 的启动一直采用init进程，&lt;code&gt;sudo /etc/init.d/apache2 start&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种方法有两个缺点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。
启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>常用linux命令</title>
    <link href="http://blog.readytran.com/2019/04/09/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.readytran.com/2019/04/09/常用linux命令/</id>
    <published>2019-04-08T16:21:43.000Z</published>
    <updated>2019-04-12T03:02:03.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在linux中将ssh用户踢下线"><a href="#在linux中将ssh用户踢下线" class="headerlink" title="在linux中将ssh用户踢下线"></a>在linux中将ssh用户踢下线</h1><ul><li>查看当前登录用户： <code>w</code></li><li>查看自己： <code>who am i</code></li><li>将可疑用户T下线： <code>pkill -kill -t tty1</code></li></ul><a id="more"></a><h1 id="挂载一个硬盘"><a href="#挂载一个硬盘" class="headerlink" title="挂载一个硬盘"></a>挂载一个硬盘</h1><ul><li>查看数据盘： <code>fdisk -l</code></li><li>分区数据盘 <code>fdisk -u /dev/vdb</code></li><li>输入 p 查看分区情况</li><li>输入n创建一个新分区</li><li>输入p选择分区类型为主分区， 也可以创建为扩展分区，那就是输入e了</li><li>输入分区编号， 我只分一个区，所以输入 1</li><li>输入可用的扇区编号，我选择默认（2048）</li><li>输入最后一个扇区编号，我选择默认</li><li>输入p进行查看分区情况</li><li>输入w，开始分区，并在分区后退出</li><li>运行命令 <code>mkfs.ext4 /dev/vdb1</code>在新分区上创建一个文件系统</li><li>运行命令 <code>cp /etc/fstab /etc/fstab.bak</code> 备份 etc/fstab</li><li><code>echo /dev/vdb1 /mnt ext4 defaults 0 0 &gt;&gt; /etc/fstab</code> 向 /etc/fstab 写入新分区信息</li><li>运行命令 <code>mount /dev/vdb1 /mnt</code> 挂载文件系统</li><li>运行命令 <code>df -h</code> 查看目前磁盘空间和使用情况</li></ul><h1 id="添加用户与用户组"><a href="#添加用户与用户组" class="headerlink" title="添加用户与用户组"></a>添加用户与用户组</h1><h2 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd webguest</span><br></pre></td></tr></table></figure><h2 id="添加用户并创建目录，指定分组"><a href="#添加用户并创建目录，指定分组" class="headerlink" title="添加用户并创建目录，指定分组"></a>添加用户并创建目录，指定分组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g webguest -d /home/webguest webguest</span><br></pre></td></tr></table></figure><h2 id="添加用户到sudoer"><a href="#添加用户到sudoer" class="headerlink" title="添加用户到sudoer"></a>添加用户到sudoer</h2><p>输入visudo命令， 在文件末尾加入配置：webguest ALL=(ALL)       ALL</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;a href=&quot;#在linux中将ssh用户踢下线&quot; class=&quot;headerlink&quot; title=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;/a&gt;在linux中将ssh用户踢下线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;查看当前登录用户： &lt;code&gt;w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看自己： &lt;code&gt;who am i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将可疑用户T下线： &lt;code&gt;pkill -kill -t tty1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>idea好用的插件</title>
    <link href="http://blog.readytran.com/2019/04/03/idea%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://blog.readytran.com/2019/04/03/idea好用的插件/</id>
    <published>2019-04-03T02:40:43.000Z</published>
    <updated>2019-04-03T03:33:04.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mybatis-Generator自动构建插件"><a href="#Mybatis-Generator自动构建插件" class="headerlink" title="Mybatis-Generator自动构建插件"></a>Mybatis-Generator自动构建插件</h1><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索better-mybatis-generator -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li>使用方法<ul><li>配置插件：打开IDEA -&gt; File -&gt; Settings… -&gt; Tools -&gt; Mybatis generator plugin，就可以看到配置界面。只要配置好对应的model，dao，xml路径即可。其他一般都不需要动。</li><li>添加数据库：在IDEA界面右侧选择Database -&gt; 选择+号 -&gt; Data Source -&gt; 选择添加的数据库。 这时候会弹出配置数据库名，用户，密码界面，配置即可。</li><li>生成代码：点击database里面的表，选择mybatis generate</li></ul></li></ul><h1 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h1><pre><code>项目中经常使用bean，entity等类，绝大部分数据类类中都需要get、set、toString、equals和hashCode方法，虽然eclipse和idea开发环境下都有自动生成的快捷方式，但自动生成这些代码后，如果bean中的属性一旦有修改、删除或增加时，需要重新生成或删除get/set等方法，给代码维护增加负担。而使用了lombok则不一样，使用了lombok的注解(@Setter,@Getter,@ToString,@@RequiredArgsConstructor,@EqualsAndHashCode或@Data)之后，就不需要编写或生成get/set等方法，很大程度上减少了代码量，而且减少了代码维护的负担。故强烈建议项目中使用lombok，去掉bean中get、set、toString、equals和hashCode等方法的代码</code></pre><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索lombok -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li><p>使用方法</p><ul><li>添加maven依赖, 去这里搜索 <strong><a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.16.20&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在类名上加上注解，代码如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@ToString</span><br><span class="line">@EqualsAndHashCode</span><br><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    private String male;</span><br><span class="line">    private String studentNo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;a href=&quot;#Mybatis-Generator自动构建插件&quot; class=&quot;headerlink&quot; title=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;/a&gt;Mybatis-Generator
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之“树”</title>
    <link href="http://blog.readytran.com/2019/03/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E2%80%9C%E6%A0%91%E2%80%9D/"/>
    <id>http://blog.readytran.com/2019/03/31/数据结构之“树”/</id>
    <published>2019-03-31T07:20:26.000Z</published>
    <updated>2019-04-03T04:58:33.717Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper学习</title>
    <link href="http://blog.readytran.com/2019/03/31/zookeeper%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.readytran.com/2019/03/31/zookeeper学习/</id>
    <published>2019-03-31T07:10:46.000Z</published>
    <updated>2019-03-31T07:10:46.813Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>dubbo搭建demo</title>
    <link href="http://blog.readytran.com/2019/03/28/dubbo%E6%90%AD%E5%BB%BAdemo/"/>
    <id>http://blog.readytran.com/2019/03/28/dubbo搭建demo/</id>
    <published>2019-03-28T01:55:15.000Z</published>
    <updated>2019-04-01T02:36:43.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>zookeeper 注册中心<br>consumer  消费端<br>provider 服务提供者</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><ul><li><p>什么是zookeeper？</p><p>  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。</p></li><li><p>安装zookeeper</p><ul><li>下载：<a href="https://mirrors.cnnic.cn/apache/zookeeper/stable/" target="_blank" rel="noopener">https://mirrors.cnnic.cn/apache/zookeeper/stable/</a></li><li>解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项<ul><li>tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。</li><li>dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。</li><li>dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录</li><li>clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。</li></ul></li><li>启动： 进入bin目录，启动zkServer.cmd</li></ul></li><li><p>安装redis服务器（非必须，我这个demo用来做session中心化）</p></li></ul><a id="more"></a><h1 id="编写provider模块"><a href="#编写provider模块" class="headerlink" title="编写provider模块"></a>编写provider模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:service       -&gt; 定义服务id，暴露给消费者, 需要定一个bean用于服务的具体实现。跟最开始的spring配置没差别</li><li>dubbo:protocol      -&gt; 定义为dubbo协议， 可能是用于扩展用吧， 搞不懂为什么要配置这个，都是固定死的</li></ul><p>具体实现比较简单，就是查询一个数据库表单数据，然后将表单数据序列化。</p><h1 id="编写consumer模块"><a href="#编写consumer模块" class="headerlink" title="编写consumer模块"></a>编写consumer模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:reference     -&gt; 远程服务，导入jar包即可使用</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>启动provider， consumer。 通过浏览器访问consumer提供的网页。 </p><hr><p>对公司的产品线重构成微服务的一点思考。目前公司的工程很多，包括： 管理后台， pc充值系统， 手机充值系统， 接口服务。<br>每个系统都需要访问数据库，编写重复的model，充值服务分散在三个工程里面，充值回调接口也分散在不同的工程。用户注册还好，都是调用的http接口，或者直接嵌入一个公用网页。</p><p>那么应该怎么改造呢，改造是为了查问题方便，代码复用。 首先，需要建立一个工作空间，将各个工程模块化，这样可以统一管理工程。 其次，将各service接口抽出来形成一个模块，比如充值，注册，充值参数可以用数据库管理起来。最后就是各种工具包可以独立成模块了，包括各种vo都形成可以打jar包的模块，这样可以避免浪费时间写这些重复代码。 </p><p>问题：功能都独立成模块后，如果改动了公用模块， 引用方要怎么更新呢， 不需要更新的时候怎么办？</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h1&gt;&lt;p&gt;zookeeper 注册中心&lt;br&gt;consumer  消费端&lt;br&gt;provider 服务提供者&lt;/p&gt;
&lt;h1 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h1&gt;&lt;h2 id=&quot;zookeeper&quot;&gt;&lt;a href=&quot;#zookeeper&quot; class=&quot;headerlink&quot; title=&quot;zookeeper&quot;&gt;&lt;/a&gt;zookeeper&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么是zookeeper？&lt;/p&gt;
&lt;p&gt;  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装zookeeper&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载：&lt;a href=&quot;https://mirrors.cnnic.cn/apache/zookeeper/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.cnnic.cn/apache/zookeeper/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项&lt;ul&gt;
&lt;li&gt;tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。&lt;/li&gt;
&lt;li&gt;dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。&lt;/li&gt;
&lt;li&gt;dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录&lt;/li&gt;
&lt;li&gt;clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;启动： 进入bin目录，启动zkServer.cmd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装redis服务器（非必须，我这个demo用来做session中心化）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>redis实战读书笔记</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%AE%9E%E6%88%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/26/redis实战读书笔记/</id>
    <published>2019-03-26T07:38:26.000Z</published>
    <updated>2019-04-01T02:36:04.754Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>redis数据结构</p><p>  redis数据结构有以下几种：</p><ul><li>string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.</li><li>list：双向链表， 首尾插入时性能高， 但是随机读写效率不高</li><li>set：无序集合</li><li>sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表</li><li>hash</li><li>bitmap</li></ul></li></ul><a id="more"></a><ul><li>数据持久化<ul><li>redis有两种数据持久化： RDB与AOF</li><li>RDB: 根据配置的策略实现当N秒内改动次数达到x次，即持久化到硬盘。可以配置多种策略以便达到最佳效果。</li><li>AOF: 对每个操作日志持久化，还原的时候按操作日志进行还原。文件相比rdb大，性能要低。可以配置三种模式：always，every second，no（由操作系统决定什么时候持久化）</li></ul></li><li>内存管理与数据淘汰机制<ul><li>默认情况下，在 32 位 OS 中，Redis 最大使用 3GB 的内存，在 64 位 OS 中则没有限制</li><li>设置maxmemory,当内存占用达到了maxmemory的时候，向redis写入数据，redis会对内存进行调整：<ul><li>按照数据淘汰策略淘汰数据，释放空间</li><li>如果没有数据可以淘汰，会对写请求报错，但是读请求不受影响</li></ul></li><li>redis提供了5种数据淘汰策略：<ul><li>volatile-lru：使用 LRU 算法进行数据淘汰（淘汰上次使用时间最早的，且使用次数最少的 Key），只淘汰设定了有效期的 Key。</li><li>allkeys-lru：使用 LRU 算法进行数据淘汰，所有的 Key 都可以被淘汰</li><li>volatile-random：随机淘汰数据，只淘汰设定了有效期的 Key。</li><li>allkeys-random：随机淘汰数据，所有的 Key 都可以被淘汰。</li><li>volatile-ttl：淘汰剩余有效期最短的 Key。</li></ul></li></ul></li></ul><pre><code>配置方法：  maxmemory-policy volatile-lru </code></pre><ul><li><p>pipelining</p><p>  实现在一次交互中执行多条命令，适用于批量命令（mset/mget）无法顾及到的地方</p></li><li><p>事务与scripting</p><p>  Redis 的事务可以确保复数命令执行时的原子性，可以使用multi，exec来达到事务的目的。执行multi时，开启事务，此时命令只是被放入执行队列，并不执行，执行exec命令的时候才会执行所有的命令。redis事务不支持回滚。</p></li><li>redis性能调优</li><li>主从复制与集群分片</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;redis数据结构&lt;/p&gt;
&lt;p&gt;  redis数据结构有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.&lt;/li&gt;
&lt;li&gt;list：双向链表， 首尾插入时性能高， 但是随机读写效率不高&lt;/li&gt;
&lt;li&gt;set：无序集合&lt;/li&gt;
&lt;li&gt;sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://blog.readytran.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis分布式锁</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    <id>http://blog.readytran.com/2019/03/26/redis分布式锁/</id>
    <published>2019-03-26T06:03:34.000Z</published>
    <updated>2019-03-31T07:06:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁</p><p><strong>为什么用redis分布式锁，怎么用呢？</strong></p><ul><li><p>为什么？</p><ul><li>使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作</li></ul></li><li><p>怎么用？</p><ul><li>加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放</li><li>解锁的时候判断是否为锁的拥有者，如果是，则删除key。<a id="more"></a></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line">import java.util.Collections;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取分布式锁的工具类， 下面的第二个链接讲了错误示例， 在第一个里面出现。 可见看别人的文章需要去分析。</span><br><span class="line"> * https://juejin.im/entry/5a502ac2518825732b19a595</span><br><span class="line"> * https://juejin.im/entry/59f7bbde5188252946502fed</span><br><span class="line"> */</span><br><span class="line">public class RedisLockTool &#123;</span><br><span class="line">    private static final String LOCK_SUCCESS = &quot;OK&quot;;</span><br><span class="line">    private static final Long RELEASE_SUCCESS = 1L;</span><br><span class="line">    private static final String SET_IF_NOT_EXIST = &quot;NX&quot;;</span><br><span class="line">    private static final String SET_WITH_EXPIRE_TIME = &quot;PX&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 尝试获取分布式锁</span><br><span class="line">     *</span><br><span class="line">     * @param jedis      Redis客户端</span><br><span class="line">     * @param lockKey    锁</span><br><span class="line">     * @param requestId  请求标识</span><br><span class="line">     * @param expireTime 超期时间</span><br><span class="line">     * @return 是否获取成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean tryGetDistributedLock(Jedis jedis, String lockKey, String requestId, int expireTime) &#123;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 1. lockKey, 互斥信号,谁能往redis设置这个key即为获取到锁</span><br><span class="line">         * 2. requestid，线程id，可以使用uuid来生成，标识锁的拥有者</span><br><span class="line">         * 3. NX：不存在即set，存在则不处理</span><br><span class="line">         * 4. PX: 锁的超时时间</span><br><span class="line">         */</span><br><span class="line">        String result = jedis.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span><br><span class="line"></span><br><span class="line">        if (LOCK_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 释放分布式锁</span><br><span class="line">     * @param jedis Redis客户端</span><br><span class="line">     * @param lockKey 锁</span><br><span class="line">     * @param requestId 请求标识</span><br><span class="line">     * @return 是否释放成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean releaseDistributedLock(Jedis jedis, String lockKey, String requestId) &#123;</span><br><span class="line">        String script = &quot;if redis.call(&apos;get&apos;, KEYS[1]) == ARGV[1] then return redis.call(&apos;del&apos;, KEYS[1]) else return 0 end&quot;;</span><br><span class="line">        //使用eval， 将命令交给redis服务器处理，eval可以保证原子性</span><br><span class="line">        Object result = jedis.eval(script, Collections.singletonList(lockKey), Collections.singletonList(requestId));</span><br><span class="line"></span><br><span class="line">        if (RELEASE_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么用redis分布式锁，怎么用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么用？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放&lt;/li&gt;
&lt;li&gt;解锁的时候判断是否为锁的拥有者，如果是，则删除key。
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>隐私日记</title>
    <link href="http://blog.readytran.com/2019/03/25/%E9%9D%A2%E8%AF%95/"/>
    <id>http://blog.readytran.com/2019/03/25/面试/</id>
    <published>2019-03-25T06:48:51.000Z</published>
    <updated>2019-04-08T03:38:41.444Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/22/resume/"/>
    <id>http://blog.readytran.com/2019/03/22/resume/</id>
    <published>2019-03-22T12:59:07.000Z</published>
    <updated>2019-04-18T06:55:30.261Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/21/interview/"/>
    <id>http://blog.readytran.com/2019/03/21/interview/</id>
    <published>2019-03-21T12:59:07.000Z</published>
    <updated>2019-04-03T04:30:30.802Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>读书</title>
    <link href="http://blog.readytran.com/2019/03/21/%E8%AF%BB%E4%B9%A6/"/>
    <id>http://blog.readytran.com/2019/03/21/读书/</id>
    <published>2019-03-21T09:33:12.000Z</published>
    <updated>2019-04-07T13:54:15.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><p>已读的书</p><blockquote><p>《曾国藩传》</p></blockquote><p>读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。<br><a id="more"></a></p><blockquote><p>《sed与awk》</p></blockquote><p>偏实操的书，读到后面，难度有点大，走马观花的读完没有去验证，等以后补上吧。 </p><blockquote><p>redis实战<br>对redis有了一定了解，后面的部分没读完， 改从公众号推文上面看了，有时间再重新读一次并实际演练</p></blockquote><p>计划读的书</p><blockquote><p>《人类简史》</p></blockquote><blockquote><p>《人月神话》</p></blockquote><blockquote><p>《深入理解jvm虚拟机》</p></blockquote><blockquote><p>《spring内幕》</p></blockquote><blockquote><p>《阿里java开发手册》</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019&quot;&gt;&lt;a href=&quot;#2019&quot; class=&quot;headerlink&quot; title=&quot;2019&quot;&gt;&lt;/a&gt;2019&lt;/h1&gt;&lt;p&gt;已读的书&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《曾国藩传》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。&lt;br&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://blog.readytran.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>关于并发</title>
    <link href="http://blog.readytran.com/2019/03/21/%E5%85%B3%E4%BA%8E%E5%B9%B6%E5%8F%91/"/>
    <id>http://blog.readytran.com/2019/03/21/关于并发/</id>
    <published>2019-03-21T03:48:53.000Z</published>
    <updated>2019-03-21T03:51:48.660Z</updated>
    
    <content type="html"><![CDATA[<p>我的并发有多少， 每个请求20ms左右。 那么我的平均响应时间=0.02， qps=50，两台服务器，就是一秒有100qps。<br>我能支撑的并发是多少呢，一个小时的并发支撑能力为 100*3600=36w.那么我的系统就是百万级别的并发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我的并发有多少， 每个请求20ms左右。 那么我的平均响应时间=0.02， qps=50，两台服务器，就是一秒有100qps。&lt;br&gt;我能支撑的并发是多少呢，一个小时的并发支撑能力为 100*3600=36w.那么我的系统就是百万级别的并发。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="架构" scheme="http://blog.readytran.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>awk与sed读书笔记</title>
    <link href="http://blog.readytran.com/2019/03/15/awk%E4%B8%8Esed%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/15/awk与sed读书笔记/</id>
    <published>2019-03-15T08:49:21.000Z</published>
    <updated>2019-03-21T16:02:25.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是awk，sed"><a href="#什么是awk，sed" class="headerlink" title="什么是awk，sed"></a>什么是awk，sed</h1><ul><li>sed是一个面向字符流的编辑器</li><li>awk是模式匹配的程序设计语言</li></ul><a id="more"></a><p>#能做什么</p><ul><li>sed</li></ul><ol><li>在一个或多个文件上自动实现编辑操作</li><li>简化对多个文件执行相同的编辑处理工作</li><li>编写转换程序</li></ol><ul><li>awk</li></ul><ol><li>更容易处理多个数据流</li><li>定义函数</li><li>使用字符串和算术操作符</li><li>处理unix命令结果</li></ol><p>#怎么做</p><blockquote><p>示例文本内容</p></blockquote><p>list<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">John Daggett, 341 King Road, Plymouth MA</span><br><span class="line"></span><br><span class="line">Alice Ford, 22 EAST Broadway, Richmond VA</span><br><span class="line"></span><br><span class="line">Orville Thomas, 11345 Oak Bridge Road, Tulsa OK</span><br><span class="line"></span><br><span class="line">Terry Kalkas, 402 Lans Road, Beaver Falls PA</span><br><span class="line"></span><br><span class="line">Eric Adams, 20 Post Road, Sudbury MA</span><br><span class="line"></span><br><span class="line">Hubert Sims, 328A Brook Road, Roanoke VA</span><br><span class="line"></span><br><span class="line">Amy Wilde, 334 Bayshore Pkwy, Mountain View CA</span><br><span class="line"></span><br><span class="line">Sal Carpenter, 73 6th Street, Boston MA</span><br></pre></td></tr></table></figure></p><p>namestate<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s/MA/,massachsetts/</span><br><span class="line">s/CA/,california/</span><br><span class="line">s/OK/,OkLaHema/</span><br><span class="line">s/PA/,Penssyvalian/</span><br></pre></td></tr></table></figure></p><ul><li>sed用法示例，更多用法使用<code>sed --help</code>查看</li></ul><p>使用命令执行匹配与替换，多个命令用分号隔开: <code>sed -e &#39;s/MA/mmmaaa/;s/VA/vvvaaa/&#39; list</code></p><p>对list文件执行命令脚本: <code>sed -f script list</code></p><p>阻止自动输出每个输入行，使用-n（要生成输出的地方，需要带上打印命令P）: <code>sed -n &#39;s/MA/mmaaa/p&#39; list</code></p><ul><li>awk用法示例</li></ul><p>查询包含MA的行： <code>awk &#39;/MA/&#39; list</code></p><p>查询第一个单词（分隔符默认为空格）： <code>awk &#39;print ${1}&#39; list</code></p><p>查询包含MA的行，并打印第一个单词： <code>awk &#39;/MA/{print $1}&#39; list</code></p><p>将单词分隔符指定为逗号并查询包含MA的行，并打印第一个单词：<code>awk -F, &#39;/MA/{print $1}&#39; list</code></p><ul><li>同时使用sed与awk示例：</li></ul><p>查询满足namestate文件规则的行，分隔符指定为逗号，第四个单词：<code>sed -f namestate list | awk -F, &#39;{print $4}&#39;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是awk，sed&quot;&gt;&lt;a href=&quot;#什么是awk，sed&quot; class=&quot;headerlink&quot; title=&quot;什么是awk，sed&quot;&gt;&lt;/a&gt;什么是awk，sed&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;sed是一个面向字符流的编辑器&lt;/li&gt;
&lt;li&gt;awk是模式匹配的程序设计语言&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>docker笔记</title>
    <link href="http://blog.readytran.com/2019/03/11/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/11/docker笔记/</id>
    <published>2019-03-11T07:11:56.000Z</published>
    <updated>2019-03-21T16:02:35.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><p>开源应用容器引擎。开发人员可以打包应用以及依赖包到这样一个容器中，然后发布到任意的linux主机系统。</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>基于go语言开发，基于linux的cgroup，namespace以及AUFS类的union FS技术对进程进行隔离。最初实现是基于linux的LXC容器，后来转为自己研发的containerd和runC<br><a id="more"></a></p><h3 id="docker架构"><a href="#docker架构" class="headerlink" title="docker架构"></a>docker架构</h3><p>docker使用C/S架构模式，通过api来管理docker容器。</p><ul><li>docker镜像：创建docker容器的模板</li><li>docker容器：独立运行的一个或者一组应用</li><li>docker client：用于调用docker api的命令行工具或者其他工具</li><li>docker主机：物理或虚拟的主机，用来运行docker守护进程或者docker容器</li><li>docker仓库：用于存放docker镜像的仓库</li><li>docker machine：安装与配置docker的工具，主要作用是在多主机情况下一个个的去安装比较麻烦，用docker-machine可以远程管理安装配置公章</li></ul><p><img src="../asset/img/docker-system.png" alt="hexo image"></p><h3 id="centos7安装"><a href="#centos7安装" class="headerlink" title="centos7安装"></a>centos7安装</h3><h4 id="检查内核版本"><a href="#检查内核版本" class="headerlink" title="检查内核版本"></a>检查内核版本</h4><p>检查linux内核版本是否满足，需要3.10以上的内核版本才能安装docker。</p><blockquote><p>uname -r</p></blockquote><h4 id="移除旧版本"><a href="#移除旧版本" class="headerlink" title="移除旧版本"></a>移除旧版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li><p>安装系统依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li><li><p>添加软件源</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><ol start="3"><li>更新yum缓存</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><ol start="4"><li>安装docker-ce（社区版）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure><ol start="5"><li>启动docker</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><ol start="6"><li>测试运行hello world</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><ol start="7"><li>镜像加速</li></ol><p>由于国内网络连接国外网络比较慢，因此需要配置加速器，加速地址使用163的仓库地址。 编辑  /etc/docker/daemon.json</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="docker资源"><a href="#docker资源" class="headerlink" title="docker资源"></a>docker资源</h3><h4 id="Docker官方英文资源"><a href="#Docker官方英文资源" class="headerlink" title="Docker官方英文资源"></a>Docker官方英文资源</h4><ul><li>docker官网：<a href="http://www.docker.com" target="_blank" rel="noopener">http://www.docker.com</a></li><li></li><li>Docker Windows 入门：<a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-windows/</a></li><li></li><li>Docker CE(社区版) Ubuntu：<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></li><li>Docker mac 入门：<a href="https://docs.docker.com/docker-for-mac/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac/</a></li><li>Docker 用户指引：<a href="https://docs.docker.com/config/daemon/" target="_blank" rel="noopener">https://docs.docker.com/config/daemon/</a></li><li>Docker 官方博客：<a href="http://blog.docker.com/" target="_blank" rel="noopener">http://blog.docker.com/</a></li><li>Docker Hub: <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></li><li>Docker开源： <a href="https://www.docker.com/open-source" target="_blank" rel="noopener">https://www.docker.com/open-source</a></li></ul><h4 id="Docker中文资源"><a href="#Docker中文资源" class="headerlink" title="Docker中文资源"></a>Docker中文资源</h4><ul><li>Docker中文网站：<a href="https://www.docker-cn.com/" target="_blank" rel="noopener">https://www.docker-cn.com/</a></li><li>Docker安装手册：<a href="https://docs.docker-cn.com/engine/installation/" target="_blank" rel="noopener">https://docs.docker-cn.com/engine/installation/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;是什么？&quot;&gt;&lt;a href=&quot;#是什么？&quot; class=&quot;headerlink&quot; title=&quot;是什么？&quot;&gt;&lt;/a&gt;是什么？&lt;/h3&gt;&lt;p&gt;开源应用容器引擎。开发人员可以打包应用以及依赖包到这样一个容器中，然后发布到任意的linux主机系统。&lt;/p&gt;
&lt;h3 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;基于go语言开发，基于linux的cgroup，namespace以及AUFS类的union FS技术对进程进行隔离。最初实现是基于linux的LXC容器，后来转为自己研发的containerd和runC&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>iptables</title>
    <link href="http://blog.readytran.com/2019/03/11/iptables/"/>
    <id>http://blog.readytran.com/2019/03/11/iptables/</id>
    <published>2019-03-11T01:55:31.000Z</published>
    <updated>2019-03-21T16:04:13.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>公司的防攻击策略主要是通过iptables进行数据包转发，将真实服务器隐藏在一堆非业务主机后面，这样服务器被攻击的时候，只需要更换服务器ip，将被攻击的服务器丢入废弃池就好，而不需要重新搭建部署服务器。示例代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3030 -j DNAT --to 10.51.18.147:3030 </span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3030 -j MASQUERADE</span><br><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3309 -j DNAT --to 10.51.18.147:3309</span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3309 -j MASQUERADE</span><br><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3310 -j DNAT --to 10.51.18.147:3310</span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3310 -j MASQUERADE</span><br></pre></td></tr></table></figure></p><a id="more"></a><h1 id="iptables详解"><a href="#iptables详解" class="headerlink" title="iptables详解"></a>iptables详解</h1><h2 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a>iptables基础</h2><p>iptables规则为预定义的条件，当数据包包头符合条件时候，按规则来处理数据包。规则存储在内核空间信息包过滤表中。这些规则分别指定了源地址，目标地址，传输协议（tcp,udp,icmp等）和服务类型（如http，ftp，smtp等）当数据包与规则匹配时候，iptables根据规则定义的方法处理（accept，reject，drop）</p><h2 id="iptables和netfilter的关系"><a href="#iptables和netfilter的关系" class="headerlink" title="iptables和netfilter的关系"></a>iptables和netfilter的关系</h2><p>iptables只是防火墙的管理工具，netfilter是功能实现</p><h2 id="iptables传输数据包过程"><a href="#iptables传输数据包过程" class="headerlink" title="iptables传输数据包过程"></a>iptables传输数据包过程</h2><ol><li>当一个数据包进入网卡时，首先进入prerouting，内核根据数据包目的IP判断是否要转发出去</li><li>如果数据包是进入本机的，就会向下走，进入input链，这个时候所有进程都可以收到数据包。本机进程发送数据时会进入output链，进入postrouting链输出</li><li>如果数据包是要转发出去，数据包就会如图向右移动，进入forward链，到达postrouting链输出</li></ol><p><img src="../asset/img/iptables.png" alt="hexo image"></p><p>参考链接：<br><a href="https://www.jianshu.com/p/ee4ee15d3658" target="_blank" rel="noopener">https://www.jianshu.com/p/ee4ee15d3658</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;公司的防攻击策略主要是通过iptables进行数据包转发，将真实服务器隐藏在一堆非业务主机后面，这样服务器被攻击的时候，只需要更换服务器ip，将被攻击的服务器丢入废弃池就好，而不需要重新搭建部署服务器。示例代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3030 -j DNAT --to 10.51.18.147:3030 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3030 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3309 -j DNAT --to 10.51.18.147:3309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3309 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3310 -j DNAT --to 10.51.18.147:3310&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3310 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
</feed>
