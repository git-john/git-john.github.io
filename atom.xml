<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>johnkang&#39;s blog</title>
  
  <subtitle>最好的学习时机是工作前三年与现在</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.readytran.com/"/>
  <updated>2019-04-11T09:29:11.994Z</updated>
  <id>http://blog.readytran.com/</id>
  
  <author>
    <name>John KANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用linux命令</title>
    <link href="http://blog.readytran.com/2019/04/09/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.readytran.com/2019/04/09/常用linux命令/</id>
    <published>2019-04-08T16:21:43.000Z</published>
    <updated>2019-04-11T09:29:11.994Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在linux中将ssh用户踢下线"><a href="#在linux中将ssh用户踢下线" class="headerlink" title="在linux中将ssh用户踢下线"></a>在linux中将ssh用户踢下线</h1><ul><li>查看当前登录用户： <code>w</code></li><li>查看自己： <code>who am i</code></li><li>将可疑用户T下线： <code>pkill -kill -t tty1</code></li></ul><a id="more"></a><h1 id="挂载一个硬盘"><a href="#挂载一个硬盘" class="headerlink" title="挂载一个硬盘"></a>挂载一个硬盘</h1><ul><li>查看数据盘： <code>fdisk -l</code></li><li>分区数据盘 <code>fdisk -u /dev/vdb</code></li><li>输入 p 查看分区情况</li><li>输入n创建一个新分区</li><li>输入p选择分区类型为主分区， 也可以创建为扩展分区，那就是输入e了</li><li>输入分区编号， 我只分一个区，所以输入 1</li><li>输入可用的扇区编号，我选择默认（2048）</li><li>输入最后一个扇区编号，我选择默认</li><li>输入p进行查看分区情况</li><li>输入w，开始分区，并在分区后退出</li><li>运行命令 <code>mkfs.ext4 /dev/vdb1</code>在新分区上创建一个文件系统</li><li>运行命令 <code>cp /etc/fstab /etc/fstab.bak</code> 备份 etc/fstab</li><li><code>echo /dev/vdb1 /mnt ext4 defaults 0 0 &gt;&gt; /etc/fstab</code> 向 /etc/fstab 写入新分区信息</li><li>运行命令 <code>mount /dev/vdb1 /mnt</code> 挂载文件系统</li><li>运行命令 <code>df -h</code> 查看目前磁盘空间和使用情况</li></ul><h1 id="添加用户与用户组"><a href="#添加用户与用户组" class="headerlink" title="添加用户与用户组"></a>添加用户与用户组</h1><h2 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd webguest</span><br></pre></td></tr></table></figure><h2 id="添加用户并创建目录，指定分组"><a href="#添加用户并创建目录，指定分组" class="headerlink" title="添加用户并创建目录，指定分组"></a>添加用户并创建目录，指定分组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g webguest -d /home/webguest webguest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;a href=&quot;#在linux中将ssh用户踢下线&quot; class=&quot;headerlink&quot; title=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;/a&gt;在linux中将ssh用户踢下线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;查看当前登录用户： &lt;code&gt;w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看自己： &lt;code&gt;who am i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将可疑用户T下线： &lt;code&gt;pkill -kill -t tty1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>idea好用的插件</title>
    <link href="http://blog.readytran.com/2019/04/03/idea%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://blog.readytran.com/2019/04/03/idea好用的插件/</id>
    <published>2019-04-03T02:40:43.000Z</published>
    <updated>2019-04-03T03:33:04.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mybatis-Generator自动构建插件"><a href="#Mybatis-Generator自动构建插件" class="headerlink" title="Mybatis-Generator自动构建插件"></a>Mybatis-Generator自动构建插件</h1><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索better-mybatis-generator -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li>使用方法<ul><li>配置插件：打开IDEA -&gt; File -&gt; Settings… -&gt; Tools -&gt; Mybatis generator plugin，就可以看到配置界面。只要配置好对应的model，dao，xml路径即可。其他一般都不需要动。</li><li>添加数据库：在IDEA界面右侧选择Database -&gt; 选择+号 -&gt; Data Source -&gt; 选择添加的数据库。 这时候会弹出配置数据库名，用户，密码界面，配置即可。</li><li>生成代码：点击database里面的表，选择mybatis generate</li></ul></li></ul><h1 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h1><pre><code>项目中经常使用bean，entity等类，绝大部分数据类类中都需要get、set、toString、equals和hashCode方法，虽然eclipse和idea开发环境下都有自动生成的快捷方式，但自动生成这些代码后，如果bean中的属性一旦有修改、删除或增加时，需要重新生成或删除get/set等方法，给代码维护增加负担。而使用了lombok则不一样，使用了lombok的注解(@Setter,@Getter,@ToString,@@RequiredArgsConstructor,@EqualsAndHashCode或@Data)之后，就不需要编写或生成get/set等方法，很大程度上减少了代码量，而且减少了代码维护的负担。故强烈建议项目中使用lombok，去掉bean中get、set、toString、equals和hashCode等方法的代码</code></pre><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索lombok -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li><p>使用方法</p><ul><li>添加maven依赖, 去这里搜索 <strong><a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.16.20&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在类名上加上注解，代码如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@ToString</span><br><span class="line">@EqualsAndHashCode</span><br><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    private String male;</span><br><span class="line">    private String studentNo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;a href=&quot;#Mybatis-Generator自动构建插件&quot; class=&quot;headerlink&quot; title=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;/a&gt;Mybatis-Generator
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之“树”</title>
    <link href="http://blog.readytran.com/2019/03/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E2%80%9C%E6%A0%91%E2%80%9D/"/>
    <id>http://blog.readytran.com/2019/03/31/数据结构之“树”/</id>
    <published>2019-03-31T07:20:26.000Z</published>
    <updated>2019-04-03T04:58:33.717Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper学习</title>
    <link href="http://blog.readytran.com/2019/03/31/zookeeper%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.readytran.com/2019/03/31/zookeeper学习/</id>
    <published>2019-03-31T07:10:46.000Z</published>
    <updated>2019-03-31T07:10:46.813Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>dubbo搭建demo</title>
    <link href="http://blog.readytran.com/2019/03/28/dubbo%E6%90%AD%E5%BB%BAdemo/"/>
    <id>http://blog.readytran.com/2019/03/28/dubbo搭建demo/</id>
    <published>2019-03-28T01:55:15.000Z</published>
    <updated>2019-04-01T02:36:43.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>zookeeper 注册中心<br>consumer  消费端<br>provider 服务提供者</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><ul><li><p>什么是zookeeper？</p><p>  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。</p></li><li><p>安装zookeeper</p><ul><li>下载：<a href="https://mirrors.cnnic.cn/apache/zookeeper/stable/" target="_blank" rel="noopener">https://mirrors.cnnic.cn/apache/zookeeper/stable/</a></li><li>解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项<ul><li>tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。</li><li>dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。</li><li>dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录</li><li>clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。</li></ul></li><li>启动： 进入bin目录，启动zkServer.cmd</li></ul></li><li><p>安装redis服务器（非必须，我这个demo用来做session中心化）</p></li></ul><a id="more"></a><h1 id="编写provider模块"><a href="#编写provider模块" class="headerlink" title="编写provider模块"></a>编写provider模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:service       -&gt; 定义服务id，暴露给消费者, 需要定一个bean用于服务的具体实现。跟最开始的spring配置没差别</li><li>dubbo:protocol      -&gt; 定义为dubbo协议， 可能是用于扩展用吧， 搞不懂为什么要配置这个，都是固定死的</li></ul><p>具体实现比较简单，就是查询一个数据库表单数据，然后将表单数据序列化。</p><h1 id="编写consumer模块"><a href="#编写consumer模块" class="headerlink" title="编写consumer模块"></a>编写consumer模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:reference     -&gt; 远程服务，导入jar包即可使用</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>启动provider， consumer。 通过浏览器访问consumer提供的网页。 </p><hr><p>对公司的产品线重构成微服务的一点思考。目前公司的工程很多，包括： 管理后台， pc充值系统， 手机充值系统， 接口服务。<br>每个系统都需要访问数据库，编写重复的model，充值服务分散在三个工程里面，充值回调接口也分散在不同的工程。用户注册还好，都是调用的http接口，或者直接嵌入一个公用网页。</p><p>那么应该怎么改造呢，改造是为了查问题方便，代码复用。 首先，需要建立一个工作空间，将各个工程模块化，这样可以统一管理工程。 其次，将各service接口抽出来形成一个模块，比如充值，注册，充值参数可以用数据库管理起来。最后就是各种工具包可以独立成模块了，包括各种vo都形成可以打jar包的模块，这样可以避免浪费时间写这些重复代码。 </p><p>问题：功能都独立成模块后，如果改动了公用模块， 引用方要怎么更新呢， 不需要更新的时候怎么办？</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h1&gt;&lt;p&gt;zookeeper 注册中心&lt;br&gt;consumer  消费端&lt;br&gt;provider 服务提供者&lt;/p&gt;
&lt;h1 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h1&gt;&lt;h2 id=&quot;zookeeper&quot;&gt;&lt;a href=&quot;#zookeeper&quot; class=&quot;headerlink&quot; title=&quot;zookeeper&quot;&gt;&lt;/a&gt;zookeeper&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么是zookeeper？&lt;/p&gt;
&lt;p&gt;  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装zookeeper&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载：&lt;a href=&quot;https://mirrors.cnnic.cn/apache/zookeeper/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.cnnic.cn/apache/zookeeper/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项&lt;ul&gt;
&lt;li&gt;tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。&lt;/li&gt;
&lt;li&gt;dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。&lt;/li&gt;
&lt;li&gt;dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录&lt;/li&gt;
&lt;li&gt;clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;启动： 进入bin目录，启动zkServer.cmd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装redis服务器（非必须，我这个demo用来做session中心化）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>redis实战读书笔记</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%AE%9E%E6%88%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/26/redis实战读书笔记/</id>
    <published>2019-03-26T07:38:26.000Z</published>
    <updated>2019-04-01T02:36:04.754Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>redis数据结构</p><p>  redis数据结构有以下几种：</p><ul><li>string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.</li><li>list：双向链表， 首尾插入时性能高， 但是随机读写效率不高</li><li>set：无序集合</li><li>sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表</li><li>hash</li><li>bitmap</li></ul></li></ul><a id="more"></a><ul><li>数据持久化<ul><li>redis有两种数据持久化： RDB与AOF</li><li>RDB: 根据配置的策略实现当N秒内改动次数达到x次，即持久化到硬盘。可以配置多种策略以便达到最佳效果。</li><li>AOF: 对每个操作日志持久化，还原的时候按操作日志进行还原。文件相比rdb大，性能要低。可以配置三种模式：always，every second，no（由操作系统决定什么时候持久化）</li></ul></li><li>内存管理与数据淘汰机制<ul><li>默认情况下，在 32 位 OS 中，Redis 最大使用 3GB 的内存，在 64 位 OS 中则没有限制</li><li>设置maxmemory,当内存占用达到了maxmemory的时候，向redis写入数据，redis会对内存进行调整：<ul><li>按照数据淘汰策略淘汰数据，释放空间</li><li>如果没有数据可以淘汰，会对写请求报错，但是读请求不受影响</li></ul></li><li>redis提供了5种数据淘汰策略：<ul><li>volatile-lru：使用 LRU 算法进行数据淘汰（淘汰上次使用时间最早的，且使用次数最少的 Key），只淘汰设定了有效期的 Key。</li><li>allkeys-lru：使用 LRU 算法进行数据淘汰，所有的 Key 都可以被淘汰</li><li>volatile-random：随机淘汰数据，只淘汰设定了有效期的 Key。</li><li>allkeys-random：随机淘汰数据，所有的 Key 都可以被淘汰。</li><li>volatile-ttl：淘汰剩余有效期最短的 Key。</li></ul></li></ul></li></ul><pre><code>配置方法：  maxmemory-policy volatile-lru </code></pre><ul><li><p>pipelining</p><p>  实现在一次交互中执行多条命令，适用于批量命令（mset/mget）无法顾及到的地方</p></li><li><p>事务与scripting</p><p>  Redis 的事务可以确保复数命令执行时的原子性，可以使用multi，exec来达到事务的目的。执行multi时，开启事务，此时命令只是被放入执行队列，并不执行，执行exec命令的时候才会执行所有的命令。redis事务不支持回滚。</p></li><li>redis性能调优</li><li>主从复制与集群分片</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;redis数据结构&lt;/p&gt;
&lt;p&gt;  redis数据结构有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.&lt;/li&gt;
&lt;li&gt;list：双向链表， 首尾插入时性能高， 但是随机读写效率不高&lt;/li&gt;
&lt;li&gt;set：无序集合&lt;/li&gt;
&lt;li&gt;sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://blog.readytran.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis分布式锁</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    <id>http://blog.readytran.com/2019/03/26/redis分布式锁/</id>
    <published>2019-03-26T06:03:34.000Z</published>
    <updated>2019-03-31T07:06:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁</p><p><strong>为什么用redis分布式锁，怎么用呢？</strong></p><ul><li><p>为什么？</p><ul><li>使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作</li></ul></li><li><p>怎么用？</p><ul><li>加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放</li><li>解锁的时候判断是否为锁的拥有者，如果是，则删除key。<a id="more"></a></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line">import java.util.Collections;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取分布式锁的工具类， 下面的第二个链接讲了错误示例， 在第一个里面出现。 可见看别人的文章需要去分析。</span><br><span class="line"> * https://juejin.im/entry/5a502ac2518825732b19a595</span><br><span class="line"> * https://juejin.im/entry/59f7bbde5188252946502fed</span><br><span class="line"> */</span><br><span class="line">public class RedisLockTool &#123;</span><br><span class="line">    private static final String LOCK_SUCCESS = &quot;OK&quot;;</span><br><span class="line">    private static final Long RELEASE_SUCCESS = 1L;</span><br><span class="line">    private static final String SET_IF_NOT_EXIST = &quot;NX&quot;;</span><br><span class="line">    private static final String SET_WITH_EXPIRE_TIME = &quot;PX&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 尝试获取分布式锁</span><br><span class="line">     *</span><br><span class="line">     * @param jedis      Redis客户端</span><br><span class="line">     * @param lockKey    锁</span><br><span class="line">     * @param requestId  请求标识</span><br><span class="line">     * @param expireTime 超期时间</span><br><span class="line">     * @return 是否获取成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean tryGetDistributedLock(Jedis jedis, String lockKey, String requestId, int expireTime) &#123;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 1. lockKey, 互斥信号,谁能往redis设置这个key即为获取到锁</span><br><span class="line">         * 2. requestid，线程id，可以使用uuid来生成，标识锁的拥有者</span><br><span class="line">         * 3. NX：不存在即set，存在则不处理</span><br><span class="line">         * 4. PX: 锁的超时时间</span><br><span class="line">         */</span><br><span class="line">        String result = jedis.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span><br><span class="line"></span><br><span class="line">        if (LOCK_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 释放分布式锁</span><br><span class="line">     * @param jedis Redis客户端</span><br><span class="line">     * @param lockKey 锁</span><br><span class="line">     * @param requestId 请求标识</span><br><span class="line">     * @return 是否释放成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean releaseDistributedLock(Jedis jedis, String lockKey, String requestId) &#123;</span><br><span class="line">        String script = &quot;if redis.call(&apos;get&apos;, KEYS[1]) == ARGV[1] then return redis.call(&apos;del&apos;, KEYS[1]) else return 0 end&quot;;</span><br><span class="line">        //使用eval， 将命令交给redis服务器处理，eval可以保证原子性</span><br><span class="line">        Object result = jedis.eval(script, Collections.singletonList(lockKey), Collections.singletonList(requestId));</span><br><span class="line"></span><br><span class="line">        if (RELEASE_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么用redis分布式锁，怎么用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么用？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放&lt;/li&gt;
&lt;li&gt;解锁的时候判断是否为锁的拥有者，如果是，则删除key。
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>隐私日记</title>
    <link href="http://blog.readytran.com/2019/03/25/%E9%9D%A2%E8%AF%95/"/>
    <id>http://blog.readytran.com/2019/03/25/面试/</id>
    <published>2019-03-25T06:48:51.000Z</published>
    <updated>2019-04-08T03:38:41.444Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/22/resume/"/>
    <id>http://blog.readytran.com/2019/03/22/resume/</id>
    <published>2019-03-22T12:59:07.000Z</published>
    <updated>2019-03-31T08:08:33.020Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/21/interview/"/>
    <id>http://blog.readytran.com/2019/03/21/interview/</id>
    <published>2019-03-21T12:59:07.000Z</published>
    <updated>2019-04-03T04:30:30.802Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>读书</title>
    <link href="http://blog.readytran.com/2019/03/21/%E8%AF%BB%E4%B9%A6/"/>
    <id>http://blog.readytran.com/2019/03/21/读书/</id>
    <published>2019-03-21T09:33:12.000Z</published>
    <updated>2019-04-07T13:54:15.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><p>已读的书</p><blockquote><p>《曾国藩传》</p></blockquote><p>读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。<br><a id="more"></a></p><blockquote><p>《sed与awk》</p></blockquote><p>偏实操的书，读到后面，难度有点大，走马观花的读完没有去验证，等以后补上吧。 </p><blockquote><p>redis实战<br>对redis有了一定了解，后面的部分没读完， 改从公众号推文上面看了，有时间再重新读一次并实际演练</p></blockquote><p>计划读的书</p><blockquote><p>《人类简史》</p></blockquote><blockquote><p>《人月神话》</p></blockquote><blockquote><p>《深入理解jvm虚拟机》</p></blockquote><blockquote><p>《spring内幕》</p></blockquote><blockquote><p>《阿里java开发手册》</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019&quot;&gt;&lt;a href=&quot;#2019&quot; class=&quot;headerlink&quot; title=&quot;2019&quot;&gt;&lt;/a&gt;2019&lt;/h1&gt;&lt;p&gt;已读的书&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《曾国藩传》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。&lt;br&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://blog.readytran.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>关于并发</title>
    <link href="http://blog.readytran.com/2019/03/21/%E5%85%B3%E4%BA%8E%E5%B9%B6%E5%8F%91/"/>
    <id>http://blog.readytran.com/2019/03/21/关于并发/</id>
    <published>2019-03-21T03:48:53.000Z</published>
    <updated>2019-03-21T03:51:48.660Z</updated>
    
    <content type="html"><![CDATA[<p>我的并发有多少， 每个请求20ms左右。 那么我的平均响应时间=0.02， qps=50，两台服务器，就是一秒有100qps。<br>我能支撑的并发是多少呢，一个小时的并发支撑能力为 100*3600=36w.那么我的系统就是百万级别的并发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我的并发有多少， 每个请求20ms左右。 那么我的平均响应时间=0.02， qps=50，两台服务器，就是一秒有100qps。&lt;br&gt;我能支撑的并发是多少呢，一个小时的并发支撑能力为 100*3600=36w.那么我的系统就是百万级别的并发。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="架构" scheme="http://blog.readytran.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>awk与sed读书笔记</title>
    <link href="http://blog.readytran.com/2019/03/15/awk%E4%B8%8Esed%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/15/awk与sed读书笔记/</id>
    <published>2019-03-15T08:49:21.000Z</published>
    <updated>2019-03-21T16:02:25.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是awk，sed"><a href="#什么是awk，sed" class="headerlink" title="什么是awk，sed"></a>什么是awk，sed</h1><ul><li>sed是一个面向字符流的编辑器</li><li>awk是模式匹配的程序设计语言</li></ul><a id="more"></a><p>#能做什么</p><ul><li>sed</li></ul><ol><li>在一个或多个文件上自动实现编辑操作</li><li>简化对多个文件执行相同的编辑处理工作</li><li>编写转换程序</li></ol><ul><li>awk</li></ul><ol><li>更容易处理多个数据流</li><li>定义函数</li><li>使用字符串和算术操作符</li><li>处理unix命令结果</li></ol><p>#怎么做</p><blockquote><p>示例文本内容</p></blockquote><p>list<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">John Daggett, 341 King Road, Plymouth MA</span><br><span class="line"></span><br><span class="line">Alice Ford, 22 EAST Broadway, Richmond VA</span><br><span class="line"></span><br><span class="line">Orville Thomas, 11345 Oak Bridge Road, Tulsa OK</span><br><span class="line"></span><br><span class="line">Terry Kalkas, 402 Lans Road, Beaver Falls PA</span><br><span class="line"></span><br><span class="line">Eric Adams, 20 Post Road, Sudbury MA</span><br><span class="line"></span><br><span class="line">Hubert Sims, 328A Brook Road, Roanoke VA</span><br><span class="line"></span><br><span class="line">Amy Wilde, 334 Bayshore Pkwy, Mountain View CA</span><br><span class="line"></span><br><span class="line">Sal Carpenter, 73 6th Street, Boston MA</span><br></pre></td></tr></table></figure></p><p>namestate<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s/MA/,massachsetts/</span><br><span class="line">s/CA/,california/</span><br><span class="line">s/OK/,OkLaHema/</span><br><span class="line">s/PA/,Penssyvalian/</span><br></pre></td></tr></table></figure></p><ul><li>sed用法示例，更多用法使用<code>sed --help</code>查看</li></ul><p>使用命令执行匹配与替换，多个命令用分号隔开: <code>sed -e &#39;s/MA/mmmaaa/;s/VA/vvvaaa/&#39; list</code></p><p>对list文件执行命令脚本: <code>sed -f script list</code></p><p>阻止自动输出每个输入行，使用-n（要生成输出的地方，需要带上打印命令P）: <code>sed -n &#39;s/MA/mmaaa/p&#39; list</code></p><ul><li>awk用法示例</li></ul><p>查询包含MA的行： <code>awk &#39;/MA/&#39; list</code></p><p>查询第一个单词（分隔符默认为空格）： <code>awk &#39;print ${1}&#39; list</code></p><p>查询包含MA的行，并打印第一个单词： <code>awk &#39;/MA/{print $1}&#39; list</code></p><p>将单词分隔符指定为逗号并查询包含MA的行，并打印第一个单词：<code>awk -F, &#39;/MA/{print $1}&#39; list</code></p><ul><li>同时使用sed与awk示例：</li></ul><p>查询满足namestate文件规则的行，分隔符指定为逗号，第四个单词：<code>sed -f namestate list | awk -F, &#39;{print $4}&#39;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是awk，sed&quot;&gt;&lt;a href=&quot;#什么是awk，sed&quot; class=&quot;headerlink&quot; title=&quot;什么是awk，sed&quot;&gt;&lt;/a&gt;什么是awk，sed&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;sed是一个面向字符流的编辑器&lt;/li&gt;
&lt;li&gt;awk是模式匹配的程序设计语言&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>docker笔记</title>
    <link href="http://blog.readytran.com/2019/03/11/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/11/docker笔记/</id>
    <published>2019-03-11T07:11:56.000Z</published>
    <updated>2019-03-21T16:02:35.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><p>开源应用容器引擎。开发人员可以打包应用以及依赖包到这样一个容器中，然后发布到任意的linux主机系统。</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>基于go语言开发，基于linux的cgroup，namespace以及AUFS类的union FS技术对进程进行隔离。最初实现是基于linux的LXC容器，后来转为自己研发的containerd和runC<br><a id="more"></a></p><h3 id="docker架构"><a href="#docker架构" class="headerlink" title="docker架构"></a>docker架构</h3><p>docker使用C/S架构模式，通过api来管理docker容器。</p><ul><li>docker镜像：创建docker容器的模板</li><li>docker容器：独立运行的一个或者一组应用</li><li>docker client：用于调用docker api的命令行工具或者其他工具</li><li>docker主机：物理或虚拟的主机，用来运行docker守护进程或者docker容器</li><li>docker仓库：用于存放docker镜像的仓库</li><li>docker machine：安装与配置docker的工具，主要作用是在多主机情况下一个个的去安装比较麻烦，用docker-machine可以远程管理安装配置公章</li></ul><p><img src="../asset/img/docker-system.png" alt="hexo image"></p><h3 id="centos7安装"><a href="#centos7安装" class="headerlink" title="centos7安装"></a>centos7安装</h3><h4 id="检查内核版本"><a href="#检查内核版本" class="headerlink" title="检查内核版本"></a>检查内核版本</h4><p>检查linux内核版本是否满足，需要3.10以上的内核版本才能安装docker。</p><blockquote><p>uname -r</p></blockquote><h4 id="移除旧版本"><a href="#移除旧版本" class="headerlink" title="移除旧版本"></a>移除旧版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li><p>安装系统依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li><li><p>添加软件源</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><ol start="3"><li>更新yum缓存</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><ol start="4"><li>安装docker-ce（社区版）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure><ol start="5"><li>启动docker</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><ol start="6"><li>测试运行hello world</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><ol start="7"><li>镜像加速</li></ol><p>由于国内网络连接国外网络比较慢，因此需要配置加速器，加速地址使用163的仓库地址。 编辑  /etc/docker/daemon.json</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="docker资源"><a href="#docker资源" class="headerlink" title="docker资源"></a>docker资源</h3><h4 id="Docker官方英文资源"><a href="#Docker官方英文资源" class="headerlink" title="Docker官方英文资源"></a>Docker官方英文资源</h4><ul><li>docker官网：<a href="http://www.docker.com" target="_blank" rel="noopener">http://www.docker.com</a></li><li></li><li>Docker Windows 入门：<a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-windows/</a></li><li></li><li>Docker CE(社区版) Ubuntu：<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></li><li>Docker mac 入门：<a href="https://docs.docker.com/docker-for-mac/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac/</a></li><li>Docker 用户指引：<a href="https://docs.docker.com/config/daemon/" target="_blank" rel="noopener">https://docs.docker.com/config/daemon/</a></li><li>Docker 官方博客：<a href="http://blog.docker.com/" target="_blank" rel="noopener">http://blog.docker.com/</a></li><li>Docker Hub: <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></li><li>Docker开源： <a href="https://www.docker.com/open-source" target="_blank" rel="noopener">https://www.docker.com/open-source</a></li></ul><h4 id="Docker中文资源"><a href="#Docker中文资源" class="headerlink" title="Docker中文资源"></a>Docker中文资源</h4><ul><li>Docker中文网站：<a href="https://www.docker-cn.com/" target="_blank" rel="noopener">https://www.docker-cn.com/</a></li><li>Docker安装手册：<a href="https://docs.docker-cn.com/engine/installation/" target="_blank" rel="noopener">https://docs.docker-cn.com/engine/installation/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;是什么？&quot;&gt;&lt;a href=&quot;#是什么？&quot; class=&quot;headerlink&quot; title=&quot;是什么？&quot;&gt;&lt;/a&gt;是什么？&lt;/h3&gt;&lt;p&gt;开源应用容器引擎。开发人员可以打包应用以及依赖包到这样一个容器中，然后发布到任意的linux主机系统。&lt;/p&gt;
&lt;h3 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;基于go语言开发，基于linux的cgroup，namespace以及AUFS类的union FS技术对进程进行隔离。最初实现是基于linux的LXC容器，后来转为自己研发的containerd和runC&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>iptables</title>
    <link href="http://blog.readytran.com/2019/03/11/iptables/"/>
    <id>http://blog.readytran.com/2019/03/11/iptables/</id>
    <published>2019-03-11T01:55:31.000Z</published>
    <updated>2019-03-21T16:04:13.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>公司的防攻击策略主要是通过iptables进行数据包转发，将真实服务器隐藏在一堆非业务主机后面，这样服务器被攻击的时候，只需要更换服务器ip，将被攻击的服务器丢入废弃池就好，而不需要重新搭建部署服务器。示例代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3030 -j DNAT --to 10.51.18.147:3030 </span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3030 -j MASQUERADE</span><br><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3309 -j DNAT --to 10.51.18.147:3309</span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3309 -j MASQUERADE</span><br><span class="line">iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3310 -j DNAT --to 10.51.18.147:3310</span><br><span class="line">iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3310 -j MASQUERADE</span><br></pre></td></tr></table></figure></p><a id="more"></a><h1 id="iptables详解"><a href="#iptables详解" class="headerlink" title="iptables详解"></a>iptables详解</h1><h2 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a>iptables基础</h2><p>iptables规则为预定义的条件，当数据包包头符合条件时候，按规则来处理数据包。规则存储在内核空间信息包过滤表中。这些规则分别指定了源地址，目标地址，传输协议（tcp,udp,icmp等）和服务类型（如http，ftp，smtp等）当数据包与规则匹配时候，iptables根据规则定义的方法处理（accept，reject，drop）</p><h2 id="iptables和netfilter的关系"><a href="#iptables和netfilter的关系" class="headerlink" title="iptables和netfilter的关系"></a>iptables和netfilter的关系</h2><p>iptables只是防火墙的管理工具，netfilter是功能实现</p><h2 id="iptables传输数据包过程"><a href="#iptables传输数据包过程" class="headerlink" title="iptables传输数据包过程"></a>iptables传输数据包过程</h2><ol><li>当一个数据包进入网卡时，首先进入prerouting，内核根据数据包目的IP判断是否要转发出去</li><li>如果数据包是进入本机的，就会向下走，进入input链，这个时候所有进程都可以收到数据包。本机进程发送数据时会进入output链，进入postrouting链输出</li><li>如果数据包是要转发出去，数据包就会如图向右移动，进入forward链，到达postrouting链输出</li></ol><p><img src="../asset/img/iptables.png" alt="hexo image"></p><p>参考链接：<br><a href="https://www.jianshu.com/p/ee4ee15d3658" target="_blank" rel="noopener">https://www.jianshu.com/p/ee4ee15d3658</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;公司的防攻击策略主要是通过iptables进行数据包转发，将真实服务器隐藏在一堆非业务主机后面，这样服务器被攻击的时候，只需要更换服务器ip，将被攻击的服务器丢入废弃池就好，而不需要重新搭建部署服务器。示例代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3030 -j DNAT --to 10.51.18.147:3030 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3030 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3309 -j DNAT --to 10.51.18.147:3309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3309 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 3310 -j DNAT --to 10.51.18.147:3310&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -d 10.51.18.147 -p tcp --dport 3310 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>理解redis字符串类型</title>
    <link href="http://blog.readytran.com/2019/03/05/%E7%90%86%E8%A7%A3redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B/"/>
    <id>http://blog.readytran.com/2019/03/05/理解redis字符串类型/</id>
    <published>2019-03-05T02:19:59.000Z</published>
    <updated>2019-03-11T08:12:52.948Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://juejin.im/post/5b6b88e5e51d45191d7a4a13" target="_blank" rel="noopener">https://juejin.im/post/5b6b88e5e51d45191d7a4a13</a><br><a href="https://segmentfault.com/a/1190000014397497" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014397497</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5b6b88e5e51d45191d7a4a13&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://juejin.im/post/5b6b88e5e51d45191d7a4a13&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>理解java垃圾回收</title>
    <link href="http://blog.readytran.com/2019/03/03/%E7%90%86%E8%A7%A3java%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    <id>http://blog.readytran.com/2019/03/03/理解java垃圾回收/</id>
    <published>2019-03-03T02:17:26.000Z</published>
    <updated>2019-04-07T14:36:21.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h1><ul><li>jvm的组成部分及其作用：<ul><li>主要由四部分组成：<strong>类加载器+运行时数据区+指令引擎+本地接口库</strong>。作用是java执行的一个串行流程，首先类加载器需要将java编译文件class加载到内存中，这个内存就是java运行时数据区，接下来执行引擎会将字节码翻译成系统指令交由CPU执行，这个执行过程需要调用其他语言写的本地接口。这就是他们的作用。</li></ul></li><li>jvm运行时数据区的理解：<ul><li>jvm运行时数据区包括5个部分：<strong>程序计数器（program counter register）+java虚拟机栈+本地方法栈+java堆+方法区</strong>。</li><li>程序计数器是线程私有的一块内存空间，记录正在执行的虚拟机字节码指令的地址。分支，循环，跳转，线程恢复时，需要根据这个记录值完成操作。</li><li>java虚拟机栈也是线程私有的一块空间，主要用来记录局部变量（基本类型值或者应用类型的指针），方法参数，方法调用，返回值</li><li>本地方法栈也是线程私有的一块空间，和java虚拟机栈类似，不过服务的对象是本地方法</li><li>java堆：线程共享的一块比较大的内存，是java虚拟机中最大的一块内存，里面主要用来存放对象实例</li><li>方法区：用来存储类信息，常量，静态变量，即时编译后的代码等数据</li></ul></li><li>jvm堆与栈的区别：<ul><li>1.栈内存存储的是基本类型和指针，而堆内存存储的是实例；</li><li>2.栈内存的更新速度要快于堆内存，因为局部变量的生命周期很短；</li><li>3.栈内存存放的变量生命周期一旦结束就会被释放，而堆内存存放的实体会被垃圾回收机制不定时的回收。</li></ul></li><li>队列和栈是什么？有什么区别？<ul><li>队列是两头都通的，所以先进先出</li><li>栈是底部不通，所以后进先出</li></ul></li><li>什么是双亲委派模型？<ul><li>类加载器从上到下有这几种类型：启动类加载器-》扩展类加载器-》应用程序加载器-》系统（应用）类加载器-》自定义的类加载器。每个类加载器都有父类加载器这样的层级关系，这个模型就是双亲委派模型。</li></ul></li><li>新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？<ul><li>新生代收集器：<ul><li>serial（串行）收集器，由虚拟机后台发起，stop the world，只留一个线程来进行垃圾收集，基于复制算法</li><li>parnew收集器，serial收集器的多线程版本</li><li>Parallel Scavenge 收集器： 没看懂，控制吞吐量的收集器</li></ul></li><li>老年代收集器：<ul><li>serial old收集器：单线程收集器，采用标记-整理算法。</li><li>Parallel Old收集器： 没看懂，后面接着研究</li><li>CMS收集器：获取<strong>最短回收停顿时间</strong>为目标,基于<strong>标记-清除算法</strong>实现. 1. 标记GC roots能直接关联到的对象，需要stw。2.并发标记，GC ROOTS tracing。 3.重新标记，需要stw，修复在第二步并发标记期间的变动 4. 进行并发清除</li></ul></li></ul></li><li>分代垃圾回收器是怎么工作的<ul><li>由于不同对象的生命周期不一样， 因此将他们进行分代管理有利于提供垃圾回收的效率。</li><li>分为三代：轻轻代，年老代，持久代。持久代主要存放java的类信息，与垃圾回收关系不大。<ul><li>年轻代： 分为eden区、from区，to区， eden空间不足时会触发minor gc。minor gc时(serial串行回收器)，将eden的活跃对象（活跃对象的判断试通过可达性分析来判断的）复制到to区，而from区的对象会根据年龄大小（每熬过一次gc增加一岁）决定去留。复制完成后，清空eden区和from区，交换from区和to区， 以保证to区永远是空的。如果在复制过程中，to区被填满了， 那么to区的所有内存会被移动到老年代。</li><li>年老代： 经历了多次垃圾回收，仍然存活的对象， 将会被放到年老代。年老代的垃圾回收为full gc。在持久代，年老代被写满的时候会触发，调用system.gc也会触发。</li></ul></li></ul></li></ul><h1 id="常用调优操作"><a href="#常用调优操作" class="headerlink" title="常用调优操作"></a>常用调优操作</h1><p>#相关术语</p><ul><li>CMS垃圾收集算法</li><li>ParNew垃圾收集算法</li><li>minorGC</li><li>fullGC</li><li>老年代</li><li>新生代</li><li>eden</li><li>survivor</li><li>stop the world</li></ul><hr><ul><li><a href="https://segmentfault.com/a/1190000004233812" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004233812</a></li><li><a href="https://blog.csdn.net/wh211212/article/details/80437696" target="_blank" rel="noopener">https://blog.csdn.net/wh211212/article/details/80437696</a></li><li><a href="https://segmentfault.com/a/1190000004233812" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004233812</a></li><li><a href="https://mp.weixin.qq.com/s/MCp16GDT0T0IVwRas6oNcA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MCp16GDT0T0IVwRas6oNcA</a></li><li><a href="https://blog.51cto.com/andrewli/2130346" target="_blank" rel="noopener">https://blog.51cto.com/andrewli/2130346</a></li><li><a href="https://segmentfault.com/a/1190000010844969" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010844969</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;我的理解&quot;&gt;&lt;a href=&quot;#我的理解&quot; class=&quot;headerlink&quot; title=&quot;我的理解&quot;&gt;&lt;/a&gt;我的理解&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;jvm的组成部分及其作用：&lt;ul&gt;
&lt;li&gt;主要由四部分组成：&lt;strong&gt;类加载器+运行时数据区+指令引擎+
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>江影工作总结</title>
    <link href="http://blog.readytran.com/2019/03/01/%E6%B1%9F%E5%BD%B1%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.readytran.com/2019/03/01/江影工作总结/</id>
    <published>2019-03-01T08:15:37.000Z</published>
    <updated>2019-03-23T14:54:54.569Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="生活" scheme="http://blog.readytran.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>ios开发者帐号</title>
    <link href="http://blog.readytran.com/2019/02/28/ios%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7/"/>
    <id>http://blog.readytran.com/2019/02/28/ios开发者帐号/</id>
    <published>2019-02-28T08:40:37.000Z</published>
    <updated>2019-03-22T03:51:58.064Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Certificates，Identifiers-amp-Profiles"><a href="#Certificates，Identifiers-amp-Profiles" class="headerlink" title="Certificates，Identifiers &amp; Profiles"></a>Certificates，Identifiers &amp; Profiles</h3><p>对于刚学ios开发的人来说，最先需要掌握的就是苹果开发的Certificates，Identifiers &amp; Profiles.<a id="more"></a><br><img src="../asset/img/ios_developer.png" alt="hexo image"></p><h4 id="Certificates"><a href="#Certificates" class="headerlink" title="Certificates"></a>Certificates</h4><p>这就是证书，需要从mac上生成后上传到开发平台,生成方法：</p><blockquote><p>钥匙串访问 -&gt; 证书助理 -&gt; 从证书颁发机构请求证书… -&gt; 保存到本地</p></blockquote><p>这个证书生成后会有一个文件，上传到developer后台。 如果其他电脑上需要用到这个证书，需要从生成证书的mac导出证书，目的是为了将私钥导过来。</p><h4 id="Identifiers"><a href="#Identifiers" class="headerlink" title="Identifiers"></a>Identifiers</h4><p>生成appid， ios应用app的全球唯一标识符。在xcode工程中为工程的bundleid。</p><h4 id="Profiles"><a href="#Profiles" class="headerlink" title="Profiles"></a>Profiles</h4><p>这货就是描述文件了，每个app对应一个开发者描述文件和发布版本描述文件。 生成描述文件的时候，如果开发者帐号为企业版本，选择in-house，商城包选择 store。 描述文件对应的证书可以是相同的. 所以证书一般只生成一个开发者证书，一个发布证书即可啦</p><hr><p>以上为我的个人使用总结，如需要了解原理，了解更多，网上资料大把可以参考如下链接（写完后觉得写的浅显后搜索的）<br><a href="https://www.cnblogs.com/xiaofeixiang/p/4564585.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaofeixiang/p/4564585.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Certificates，Identifiers-amp-Profiles&quot;&gt;&lt;a href=&quot;#Certificates，Identifiers-amp-Profiles&quot; class=&quot;headerlink&quot; title=&quot;Certificates，Identifiers &amp;amp; Profiles&quot;&gt;&lt;/a&gt;Certificates，Identifiers &amp;amp; Profiles&lt;/h3&gt;&lt;p&gt;对于刚学ios开发的人来说，最先需要掌握的就是苹果开发的Certificates，Identifiers &amp;amp; Profiles.
    
    </summary>
    
    
      <category term="ios" scheme="http://blog.readytran.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>三次握手四次挥手</title>
    <link href="http://blog.readytran.com/2019/02/28/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
    <id>http://blog.readytran.com/2019/02/28/三次握手四次挥手/</id>
    <published>2019-02-28T08:35:49.000Z</published>
    <updated>2019-02-28T09:28:55.570Z</updated>
    
    <content type="html"><![CDATA[<p>常用查询linux服务器性能的一个命令，查询服务器请求连接状态，这个命令会列出请求的状态以及对应的请求个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -n | awk &apos;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&apos;</span><br></pre></td></tr></table></figure><ul><li>TIME_WAIT 28 #表示主动关闭，通过优化系统内核参数可容易解决</li><li>CLOSE_WAIT 1 #表示被动关闭，需要从程序本身出发</li><li>ESTABLISHED 30 #表示正在通信</li></ul><hr><blockquote><p>要了解这个命令产生的结果，需要了解tcp的三次握手，四次挥手. 三次握手是为了建立连接，四次挥手是为了断开连接<br><a id="more"></a></p></blockquote><h4 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h4><ol><li>client端发送请求报文：syn=1,seq=client_sn</li><li>Server接收到请求报文后进行第一次握手并进行资源分配，回复报文：syn=1，seq=server_sn,ack=client_sn+1</li><li>客户端收到server的回复后，进行第二次握手并进行资源分配，回复：syn=0，seq=client_sn+1,ack=server_sn+1</li><li>Server收到客户端的ack报文后为第三次握手，表示连接成功建立</li></ol><h4 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h4><p>断开连接，可以是服务器断开，也可以是客户端断开。<br>客户端主动断开连接的情况如下：</p><ol><li>客户端发送fin,进入fin_wait状态，表示：客户端没有数据要发给server，请求关闭 （第一次挥手）</li><li>服务端收到fin后，发送ack，说：请求已收到，我还没准备好，请等待。此时连接状态在服务器端为close_wait状态，（第二次挥手） 而客户端进入FIN_wait2状态。</li><li>服务器确认准备好了以后，发送fin给客户端，表示：准备好关闭。（第三次挥手）</li><li>客户端收到FIN后，发送ack给服务端，自身进入time_wait状态。如果server没有收到ack则可以重传 （第四次挥手）</li><li>服务端收到ack后，知道可以关闭，不再回复消息</li><li>客户端等待2MSL后，确认没有收到消息，把连接中断<br><img src="/asset/img/client_1.png" alt="hexo image"><br><img src="/asset/img/server_1.png" alt="hexo image"></li></ol><hr><p>看了上面的情况，大概知道这几个状态的数据是怎么形成的了，以下是解决方案：</p><blockquote><p>通过修改/etc/sysctl.conf文件，服务器能够快速回收和重用TIME_WAIT 的资源</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_syncookies = 1  #表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭         </span><br><span class="line">net.ipv4.tcp_tw_reuse = 1 #表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭  </span><br><span class="line">net.ipv4.tcp_tw_recycle = 1  #表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭    </span><br><span class="line">net.ipv4.tcp_fin_timeout=30 #表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间</span><br></pre></td></tr></table></figure><blockquote><p>导致 CLOSE_WAIT 大量存在的原因：就是在对方关闭连接之后服务器程序自己没有进一步发出 ACK 信号。换句话说，就是在对方连接关闭之后，程序里没有检测到，或者程序压根就忘记了这个时候需要关闭连接，于是这个资源就一直被程序占着；服务器对于程序抢占的资源没有主动回收的权利，除非终止程序运行。</p></blockquote><p>解决方案：代码需要判断 socket ，一旦读到 0，断开连接，read 返回负，检查一下 errno，如果不是 AGAIN，就断开连接。<br>所以解决 CLOSE_WAIT 大量存在的方法还是从自身的代码出发。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常用查询linux服务器性能的一个命令，查询服务器请求连接状态，这个命令会列出请求的状态以及对应的请求个数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -n | awk &amp;apos;/^tcp/ &amp;#123;++S[$NF]&amp;#125; END &amp;#123;for(a in S) print a, S[a]&amp;#125;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;TIME_WAIT 28 #表示主动关闭，通过优化系统内核参数可容易解决&lt;/li&gt;
&lt;li&gt;CLOSE_WAIT 1 #表示被动关闭，需要从程序本身出发&lt;/li&gt;
&lt;li&gt;ESTABLISHED 30 #表示正在通信&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;要了解这个命令产生的结果，需要了解tcp的三次握手，四次挥手. 三次握手是为了建立连接，四次挥手是为了断开连接&lt;br&gt;
    
    </summary>
    
    
      <category term="tcp" scheme="http://blog.readytran.com/tags/tcp/"/>
    
  </entry>
  
</feed>
