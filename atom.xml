<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>johnkang&#39;s blog</title>
  
  <subtitle>最好的学习时机是工作前三年与现在</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.readytran.com/"/>
  <updated>2019-05-29T14:14:44.149Z</updated>
  <id>http://blog.readytran.com/</id>
  
  <author>
    <name>John KANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>上班日记</title>
    <link href="http://blog.readytran.com/2019/05/13/%E4%B8%8A%E7%8F%AD%E6%97%A5%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/05/13/上班日记/</id>
    <published>2019-05-13T14:42:59.000Z</published>
    <updated>2019-05-29T14:14:44.149Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      学习曾国藩，经常反省
    
    </summary>
    
    
      <category term="生活" scheme="http://blog.readytran.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>注解合集</title>
    <link href="http://blog.readytran.com/2019/05/05/%E6%B3%A8%E8%A7%A3%E5%90%88%E9%9B%86/"/>
    <id>http://blog.readytran.com/2019/05/05/注解合集/</id>
    <published>2019-05-05T07:57:36.000Z</published>
    <updated>2019-05-05T09:41:29.940Z</updated>
    
    <content type="html"><![CDATA[<ul><li>@RunWith</li></ul><p>@RunWith就是一个运行器</p><pre><code>@RunWith(JUnit4.class)就是指用JUnit4来运行@RunWith(SpringJUnit4ClassRunner.class),让测试运行于Spring测试环境@RunWith(Suite.class)的话就是一套测试集合</code></pre><ul><li><p>@SpringBootTest</p></li><li><p>@SpringBootApplication</p></li><li><p>@RestController</p></li><li><p>@Component</p></li><li><p>@ConfigurationProperties</p></li><li><p>@Configuration</p></li><li><p>@PropertySource</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;@RunWith&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@RunWith就是一个运行器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@RunWith(JUnit4.class)就是指用JUnit4来运行
@RunWith(SpringJUnit4ClassRunner.class),让
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>AQS笔记</title>
    <link href="http://blog.readytran.com/2019/04/23/AQS%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/04/23/AQS笔记/</id>
    <published>2019-04-23T07:29:33.000Z</published>
    <updated>2019-05-05T07:57:46.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-是什么"><a href="#1-是什么" class="headerlink" title="1. 是什么"></a>1. 是什么</h1><p>在JDK 1.6之前，synchronized这个重量级锁其性能一直都是较为低下，它却缺少了获取锁与释放锁的可操作性，可中断、超时获取锁，且它为独占式在高并发场景下性能大打折扣</p><p>AQS：AbstractQueuedSynchronizer，即队列同步器。它是构建锁或者其他同步组件的基础框架（如ReentrantLock、ReentrantReadWriteLock、Semaphore等），JUC并发包的作者（Doug Lea）期望它能够成为实现大部分同步需求的基础。它是JUC并发包中的核心基础组件。</p><p>AQS解决了在实现同步器的时候涉及到的大量细节问题，例如获取同步状态，FIFO同步队列。在基于AQS构建的同步器中只能在一个时刻发生阻塞，从而降低上下文切换的开销，提高了吞吐量。同时AQS考虑了可伸缩性，因此J.U.C中所有基于AQS构建的同步器均可以获得这个优势。</p><p>AQS的主要使用方式是继承，子类通过继承同步器并实现它的抽象方法来管理同步状态</p><p>AQS使用一个int类型的成员变量state来表示同步状态，当state&gt;0时表示已经获取了锁，当state = 0时表示释放了锁。它提供了三个方法（getState()、setState(int newState)、compareAndSetState(int expect,int update)）来对同步状态state进行操作，当然AQS可以确保对state的操作是安全的</p><p>AQS通过内置的FIFO同步队列来完成线程的排队工作，如果当前线程获取同步状态失败（锁）时，AQS则会将当前线程以及等待状态等信息构造成一个节点（Node）并将其加入同步队列，同时会阻塞当前线程，当同步状态释放时，则会把节点中的线程唤醒，使其再次尝试获取同步状态</p><p><img src="../asset/img/aqs_frame.png" alt="AQS"></p><h1 id="2-AQS主要方法"><a href="#2-AQS主要方法" class="headerlink" title="2. AQS主要方法"></a>2. AQS主要方法</h1><ul><li>getState()：返回同步状态的当前值；</li><li>setState(int newState)：设置当前同步状态；</li><li>compareAndSetState(int expect, int update)：使用CAS设置当前状态，该方法能够保证状态设置的原子性</li><li>tryAcquire(int arg)：独占式获取同步状态，获取同步状态成功后，其他线程需要等待该线程释放同步状态才能获取同步状态</li><li>tryRelease(int arg)：独占式释放同步状态</li><li>tryAcquireShared(int arg)：共享式获取同步状态，返回值大于等于0则表示获取成功，否则获取失败</li><li>tryReleaseShared(int arg)：共享式释放同步状态</li><li>isHeldExclusively()：当前同步器是否在独占式模式下被线程占用，一般该方法表示是否被当前线程所独占</li><li>acquire(int arg)：独占式获取同步状态，如果当前线程获取同步状态成功，则由该方法返回，否则，将会进入同步队列等待，该方法将会调用可重写的tryAcquire(int arg)方法</li><li>acquireInterruptibly(int arg)：与acquire(int arg)相同，但是该方法响应中断，当前线程为获取到同步状态而进入到同步队列中，如果当前线程被中断，则该方法会抛出InterruptedException异常并返回</li><li>tryAcquireNanos(int arg,long nanos)：超时获取同步状态，如果当前线程在nanos时间内没有获取到同步状态，那么将会返回false，已经获取则返回true</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-是什么&quot;&gt;&lt;a href=&quot;#1-是什么&quot; class=&quot;headerlink&quot; title=&quot;1. 是什么&quot;&gt;&lt;/a&gt;1. 是什么&lt;/h1&gt;&lt;p&gt;在JDK 1.6之前，synchronized这个重量级锁其性能一直都是较为低下，它却缺少了获取锁与释放锁的可操
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>spring-aop源码分析</title>
    <link href="http://blog.readytran.com/2019/04/23/aop%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://blog.readytran.com/2019/04/23/aop源码分析/</id>
    <published>2019-04-23T07:29:33.000Z</published>
    <updated>2019-04-24T15:31:34.243Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-什么是AOP"><a href="#1-什么是AOP" class="headerlink" title="1. 什么是AOP"></a>1. 什么是AOP</h1><p>用来服务于要对一些没有任何关系的对象执行公用逻辑方法的对象，使得他们能够具备公共行为，减少重复代码。</p><h1 id="2-代理模式"><a href="#2-代理模式" class="headerlink" title="2. 代理模式"></a>2. 代理模式</h1><p>为其他对象提供一种代理，为对象的行为增加操作</p><h1 id="3-静态代理原理及实践"><a href="#3-静态代理原理及实践" class="headerlink" title="3. 静态代理原理及实践"></a>3. 静态代理原理及实践</h1><p>代理类，实现类都实现了同一个接口。代理的方法必须在接口里定义了。调用的时候调用代理类，代理类里面执行实现类的目标方法。</p><p>缺点： 不灵活，每个方法都需要代理类实现一边</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">package test.staticProxy;</span><br><span class="line"> </span><br><span class="line">// 接口</span><br><span class="line">public interface IUserDao &#123;</span><br><span class="line">    void save();</span><br><span class="line">    void find();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">//目标对象</span><br><span class="line">class UserDao implements IUserDao&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void save() &#123;</span><br><span class="line">        System.out.println(&quot;模拟：保存用户！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void find() &#123;</span><br><span class="line">        System.out.println(&quot;模拟：查询用户&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line">  * 静态代理</span><br><span class="line">  * 特点：</span><br><span class="line">  * 2. 目标对象必须要实现接口</span><br><span class="line">  * 2. 代理对象，要实现与目标对象一样的接口</span><br><span class="line"> */</span><br><span class="line">class UserDaoProxy implements IUserDao&#123;</span><br><span class="line"> </span><br><span class="line">    // 代理对象，需要维护一个目标对象</span><br><span class="line">    private IUserDao target = new UserDao();</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    public void save() &#123;</span><br><span class="line">        System.out.println(&quot;代理操作： 开启事务...&quot;);</span><br><span class="line">        target.save();   // 执行目标对象的方法</span><br><span class="line">        System.out.println(&quot;代理操作：提交事务...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    public void find() &#123;</span><br><span class="line">        target.find();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestProxy()&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        UserDaoProxy proxy = new UserDaoProxy();</span><br><span class="line">        proxy.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-动态代理"><a href="#4-动态代理" class="headerlink" title="4. 动态代理"></a>4. 动态代理</h1><p>代理类在运行期间，通过反射动态生成，代理类和委托类的关系在运行时才能确定。主要用到Proxy与InvocationHandler.</p><h1 id="5-spring-aop术语解释"><a href="#5-spring-aop术语解释" class="headerlink" title="5. spring aop术语解释"></a>5. spring aop术语解释</h1><ul><li>Join Point(连接点) - 起作用的那个方法，具体执行的方法</li><li>Pointcut（切入点）- 用来指定一组符合条件的joinpoint，通常使用表达式来限定，spring默认使用aspect pointcut expression language</li><li>advice：在joinpoint上特定的时刻执行的操作</li><li>introduction: 给对象增加方法或者属性</li><li>target object：起作用的对象</li><li>aop proxy： 为实现aop所生成的代理， cglib与jdk动态代理</li><li>aspect： 组合了point与advice，与advisor的区别就是，advisor表示的是一对， 而aspect可以表示多对</li><li>weaving： 将advice织入join point的这个过程<ul><li>编译器织入, 这要求有特殊的Java编译器.</li><li>类装载期织入, 这需要有特殊的类装载器.</li><li>动态代理织入, 在运行期为目标类添加增强(Advice)生成子类的方式</li></ul></li></ul><h1 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-什么是AOP&quot;&gt;&lt;a href=&quot;#1-什么是AOP&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是AOP&quot;&gt;&lt;/a&gt;1. 什么是AOP&lt;/h1&gt;&lt;p&gt;用来服务于要对一些没有任何关系的对象执行公用逻辑方法的对象，使得他们能够具备公共行为，减
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习笔记</title>
    <link href="http://blog.readytran.com/2019/04/21/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/04/21/mysql学习笔记/</id>
    <published>2019-04-21T06:39:11.000Z</published>
    <updated>2019-04-21T09:57:21.624Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql索引"><a href="#mysql索引" class="headerlink" title="mysql索引"></a>mysql索引</h1><p>为了快速定位到mysql存储的某张表，某行记录，以便进行查询与修改， 我们需要将数据以一定的数据结构进行存储，这个数据结构就是我们说的索引。能够支持快速查找的数据结构有： <strong>顺序数组，哈希， 搜索树。</strong></p><a id="more"></a><pre><code>数组结构：要求插入的时候保证有序， 这样可以使用二分查找达到O(logN)的时间复杂度。 但是数组有一个缺点，插入数据时需要移动数据以便保证有序，时间复杂度为 O(N)。所以有序数组只适合静态数据，不适合经常变动的数据。为什么不使用链表来存储？这是因为操作系统以4kb作为一个数据页进行数据读取，mysql以16kb作为一个数据块来读取。已经读取过的数据块会在内存中缓存。 如果多次读取的数据在同一个数据库，那么就只需要一次磁盘IO。而如果顺序一致的记录在文件中也是顺序存储的，就可以一次读取多个数据块(不理解这个)，这样查询范围的速度就可以大大提升。哈希结构：类似于jdk的hashmap，哈希表通过一个特定的哈希函数将key值转换为一个固定的地址，然后将对应的value放到这个位置。如果发生哈希碰撞，就在当前位置拉出一个链表。由于哈希函数的离散特性，经过哈希函数处理后的key将失去原有顺序，所以它无法满足范围查询，只适合等值查询的情况，如一些缓存的场景。树结构：二叉树如果只有左子节点或只有右子节点， 则变成了一个线性结构，所以为了维持Olog（N）的查询时间复杂度， 平衡二叉树的插入时间复杂度也是 O（log（N））。二叉树如果只有两个子节点，在数据量很大的情况下，树高就会很高，树的每一层一般不在一个数据块进行存储。为了尽量的减少磁盘读写， 我们采用N叉树来代替二叉树，mysql的N为1200，这样在树高为4的情况下也能存储上亿级别的数据，而且前面两层一般都存储在内存中。mysql中用到的B+树一般用非叶子节点构建索引，用叶子节点来存储具体的数据。</code></pre><p>InnoDB中，有聚簇索引与普通索引之分。</p><pre><code>聚簇索引根据主键来构建，叶子节点存放的是行数据。 普通索引是根据声明索引时候的列来构建，叶子节点存放的是数据行的主键。普通索引还有唯一索引和联合索引两个特例。唯一索引会在插入和修改的时候对列值进行判断是否存在，联合索引则会按建立索引的先后顺序进行列值拼接，然后构建索引。</code></pre><p>所以我们知道了按普通索引查询会先查出主键索引，然后查出对应的行数据。 这个过程我们称为回表。如果我们对要查询的字段都加入到了一个联合索引，这种查询不需要进行回表，直接从索引中就可以读取到值，这种我们称为覆盖索引。</p><p>索引的一些注意点。</p><pre><code>如果在索引上用到了函数，将导致无法用到之前创建的索引。索引遵循最左匹配原则查询以某个字符串开头，能用到索引，查询是否包含某个字符串将用不到索引，此时可以使用全文索引。联合索引根据第一个列查询可以用到索引，仅仅根据第二个列将无法用到索引查询的时候用 IN 的效率高于 NOT =建议将索引的列设置为非空，这个和 NULL 字段的存储有关</code></pre><h2 id="问题：-为什么我们不建议使用订单号来作为订单表的主键？"><a href="#问题：-为什么我们不建议使用订单号来作为订单表的主键？" class="headerlink" title="问题： 为什么我们不建议使用订单号来作为订单表的主键？"></a>问题： 为什么我们不建议使用订单号来作为订单表的主键？</h2><ol><li>因为普通索引的叶子节点存储的是主键的值，而订单号一般都很长，这样会导致普通索引会占用很大的物理空间。</li><li>一般我们使用自增id来作为主键，连续性较好， 这样相邻的两条记录会很大概率在同一个数据块上。可以减少磁盘的读取次数。</li></ol><h1 id="存储格式"><a href="#存储格式" class="headerlink" title="存储格式"></a>存储格式</h1><p>InnoDB逻辑存储结构从大到小可分为：表空间，段，区，页，行。如图</p><p><img src="../asset/img/mysql_storage.jpg" alt="存储格式"></p><pre><code>表空间作为存储结构的最高层，所有数据都存放在表空间中，默认情况下用一个共享表空间 ibdata1 ，如果开启了 innodb_file_per_table 则每张表的数据将存储在单独的表空间中，也就是每张表都会有一个文件表空间由各个段构成，InnoDB存储引擎由索引组织的，而索引中的叶子节点用来记录数据，存储在数据段，而非叶子节点用来构建索引，存储在索引段，而回滚段我们在后面分析锁的时候在聊区是由连续的页组成，任何情况下一个区都是 1MB。一个区中可以有多个页，每个页默认16kb，所以默认情况下，一个区有64个连续的页。页的大小可以根据innodb_page_size设置。数据页存储的是具体的数据行记录。一行记录最终以二进制的形式存储到文件中。所以我们要能够解析出一行数据的各个列的值就需要按规定格式来存储数据行数据。</code></pre><h2 id="数据行存储格式"><a href="#数据行存储格式" class="headerlink" title="数据行存储格式"></a>数据行存储格式</h2><p><img src="../asset/img/row_storage.png" alt="行数据存储格式"></p><ul><li><p>变长字段长度列表，该位置用来存储所申明的变长字段中非空字段实际占有的长度列表，例如有3个非空字段，其中第一个字段长度为3，第二个字段为空，<em>第三个字段长度为1，则将用 01 03 表示</em>（<font color="red">倒序存放</font>），为空字段将在下一个位置进行标记。变长字段长度不能超过 2 个字节，所以 varchar 的长度最大为 65535</p></li><li><p>NULL 标志位，占 1 个字节，如果对应的列为空则在对应的位上置为 1 ，否则为 0 ，由于该标志位占一个字节，所以列的数量不能超过 255。如果某字段为空，在后面具体的列数据中将不会在记录。这种方式也导致了在处理索引字段为空的时候需要进行额外的操作</p></li><li><p>记录头信息，固定占 5 字节，包含下一条记录的位置，该行记录总长度，记录类型，是否被删除，对应的 slot 信息等</p></li><li><p>列数据 包含具体的列对应的值，加上两个隐藏列，事务 ID 列和回滚指针列。如果没有申明主键，还会增加一列记录内部 ID（<font color="red">这就是隐式主键了</font>）</p></li></ul><h2 id="数据页存储格式"><a href="#数据页存储格式" class="headerlink" title="数据页存储格式"></a>数据页存储格式</h2><p>InnoDB的数据页由7个部分组成：</p><ul><li>文件头（File Header）固定38个字节（页的位置，上一页下一页位置，checksum , LSN）</li><li>数据页头（page header）固定56个字节。包含slot数目，可重用空间起始地址，第一个记录地址，记录数，最大事务ID等</li><li>虚拟的最大最小记录 （Infimum + Supremum Record）</li><li>用户记录 （User Records） 包含已经删除的记录以链表的形式构成可重用空间</li><li>待分配空间 （Free spaces） 未分配的空间</li><li>页目录 （Page Directory） slot 信息，下面单独介绍</li><li>文件尾 （File Trailer） 固定8个字节,用来保证页的完整性</li></ul><p><img src="../asset/img/page_storage.jpg" alt="数据页存储格式"></p><p>页目录里维护多个 slot ，一个 slot 包含多个行记录。每个 slot 占 2 个字节，记录这个 slot 里的行记录相对页初始位置的偏移量。由于索引只能定位到数据页，而定位到数据页内的行记录还需要在内存中进行二分查找，而这个二分查找就需要借助 slot 信息，先找到对应的 slot ，然后在 slot 内部通过数据行中记录头里的下一个记录地址进行遍历。每一个 slot 可以包含 4 到 8 个数据行。如果没有 slot 辅助，链表本身是无法进行二分查找的。</p><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>排序有好多种算法来实现，在 MySQL 中经常会带上一个 limit ,表示从排序后的结果集中取前 100 条，或者取第 n 条到第 m 条，要实现排序，我们需要先根据查询条件获取结果集，然后在内存中对这个结果集进行排序，如果结果集数量特别大，还需要将结果集写入到多个文件里，然后单独对每个文件里的数据进行排序，然后在文件之间进行归并，排序完成后在进行 limit 操作。没错，这个就是 MySQL 实现排序的方式，前提是排序的字段没有索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `person` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `city` varchar(16) NOT NULL,</span><br><span class="line">  `name` varchar(16) NOT NULL,</span><br><span class="line">  `age` int(11) NOT NULL,</span><br><span class="line">  `addr` varchar(128) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `city` (`city`)</span><br><span class="line">) ENGINE=InnoDB;</span><br><span class="line"></span><br><span class="line">select city,name,age from person where city=&apos;武汉&apos; order by name limit 100  ;</span><br></pre></td></tr></table></figure><p>使用 explain 发现该语句会使用 city 索引，并且会有 filesort . 我们分析下该语句的执行流程</p><ol><li><p>初始化 sortbuffer ，用来存放结果集</p></li><li><p>找到 city  索引，定位到 city 等于武汉的第一条记录，获取主键索引ID</p></li><li><p>根据 ID 去主键索引上找到对应记录，取出 city,name,age 字段放入 sortbuffer</p></li><li><p>在 city 索引取下一个 city 等于武汉的记录的主键ID</p></li><li><p>重复上面的步骤，直到所有 city 等于武汉的记录都放入 sortbuffer</p></li><li><p>对 sortbuffer 里的数据根据 name 做快速排序</p></li><li><p>根据排序结果取前面 1000 条返回</p></li></ol><p>这里是查询 city,name,age 3个字段，比较少，如果查询的字段较多，则多个列如果都放入 sortbuffer 将占有大量内存空间，另一个方案是只区出待排序的字段和主键放入 sortbuffer 这里是 name 和 id ,排序完成后在根据 id 取出需要查询的字段返回，其实就是时间换取空间的做法，这里通过 max_length_for_sort_data 参数控制，是否采用后面的方案进行排序。</p><p>另外如果 sortbuffer 里的条数很多，同样会占有大量的内存空间，可以通过参数 sort_buffer_size 来控制是否需要借助文件进行排序，这里会把 sortbuffer 里的数据放入多个文件里，用归并排序的思路最终输出一个大的文件</p><p>以上方案主要是 name 字段没有加上索引，如果 name 字段上有索引，由于索引在构建的时候已经是有序的了，所以就不需要进行额外的排序流程只需要在查询的时候查出指定的条数就可以了，这将大大提升查询速度。我们现在加一个 city 和 name 的联合索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table person add index city_user(city, name);</span><br></pre></td></tr></table></figure><p>这样查询过程如下：</p><ol><li>根据 city,name 联合索引定位到 city 等于武汉的第一条记录，获取主键索引ID</li><li>根据 ID 去主键索引上找到对应记录，取出 city,name,age 字段作为结果集返回</li><li>继续重复以上步骤直到 city 不等于武汉，或者条数大于 1000</li></ol><p>总结一下，我们在有排序操作的时候，最好能够让排序字段上建有索引，另外由于查询第一百万条开始的一百条记录，需要过滤掉前面一百万条记录，即使用到索引也很慢，所以可以根据 ID 来进行区分，分页遍历的时候每次缓存上一次查询结果最后一条记录的 id ， 下一次查询加上 id &gt; xxxx limit 0,1000 这样可以避免前期扫描到的结果被过滤掉的情况</p><h1 id="InnoDB存储模型"><a href="#InnoDB存储模型" class="headerlink" title="InnoDB存储模型"></a>InnoDB存储模型</h1><p>InnoDB 通过一系列后台线程将相关操作进行异步处理，如下图所示，同时借助缓冲池来减小 CPU 和磁盘速度上的差异。当查询的时候会先通过索引定位到对应的数据页，然后检测数据页是否在缓冲池内，如果在就直接返回，如果不在就去聚簇索引中通过磁盘 IO 读取对应的数据页并放入缓冲池。一个数据页会包含多个数据行。缓存池通过 LRU 算法对数据页进行管理，也就是最频繁使用的数据页排在列表前面，不经常使用的排在队尾，当缓冲池满了的时候会淘汰掉队尾的数据页。从磁盘新读取到的数据页并不会放在队列头部而是放在中间位置，这个中间位置可以通过参数进行修改。缓冲池也可以设置多个实例，数据页根据哈希算法决定放在哪个缓冲池。<br><img src="../asset/img/innodb_model.jpg" alt="innodb model"></p><p>InnoDB 在更新数据的时候会采用 WAL 技术，也就是 Write Ahead Logging ，这个日志就是 redolog 用来保证数据库宕机后可以通过该文件进行恢复。这个文件一般只会顺序写，只有在数据库启动的时候才会读取 redolog 文件看是否需要进行恢复。该文件记录了对某个数据页的物理操作，例如某个 sql 把某一行的某个列的值改为 10 ，对应的 redolog 文件格式可能为：把第5个数据页中偏移量为99的位置写入一个值 10 。redolog 不是无限大的，他的大小是可以配置的，并且是循环使用的，例如配置大小为 4G ，一共 4 个文件，每个文件 1G 。首先从第一个文件开始顺序写，写到第四个文件后在从第一个文件开始写，类似一个环，用一个后台线程把 redolog 里的数据同步到聚簇索引上的数据页上。写入 redolog 的时候不能将没有同步到数据页上的记录覆盖，如果碰到这种情况会停下来先进行数据页同步然后在继续写入 redolog 。另外执行更新操作的时候，会先更新缓冲池里的数据页，然后写入 redolog ， 这个时候真正存储数据的地方还没有更新，也就是说这时候缓冲池中的数据页和磁盘不一致，这种数据页称为脏页，当脏页由于内存不足或者其他原因需要丢弃的时候，一定要先将该脏页对应的redolog 刷新到磁盘里的真实数据页，不然下次查询的时候由于 redolog 没有同步到磁盘，而查询直接通过索引定位到数据页就会查询出脏数据。</p><p>更新的时候先从磁盘或者缓冲池中读取对应的数据页，然后对数据页里的数据进行更改并生成 redolog　到对应的缓冲池（redolog buffer）进行缓存，当事务提交的时候将缓存写入到　redolog　的物理磁盘文件上。这里由于操作系统的文件写入 InnoDB 并没有使用 O_DIRECT 直接写入到文件，为了保证性能而是先写入操作系统的缓存，之后在进行 flush ，所以事务提交的时候 InnoDB 需要在调用一次　fsync 的系统调用来确保数据落盘。为了提高性能 InnoDB 可以通过参数 innodb_flush_log_at_trx_commit 来控制事务提交时是否强制刷盘。默认为 1 ，事务每次提交都需要调用 fsync 进行刷盘，0 表示事务提交的时候不会调用 　redolog　的文件写入，通过后台线程每秒同步一次，2 表示事务提交的时候会写入文件但是只保证写入操作系统缓存，不进行 fsync 操作。redolog 文件只会顺序写，所以磁盘操作性能不会太慢，所以建议生产环境都设置为　１　，以防止数据库宕机导致数据丢失。</p><p>在执行更新逻辑的时候还会写入另外一个日志：undolog 。这个文件存储在共享表空间中，也就是即使打开了 innodb_file_per_table 参数，所有的表的 undolog 都存储在同一个文件里。该文件主要用来做事务回滚和 MVCC 。undolog 是逻辑日志，也就是他不是记录的将物理的数据页恢复到之前的状态，而是记录的和原 sql 相反的 sql , 例如 insert 对应 delete , delete 对应 insert ，update 对应另外一个 update　。事务回滚很好理解，执行相反的操作回滚到之前的状态，而 MVCC 是指镜像读，当一个事务需要查询某条记录，而该记录已经被其他事务修改，但该事务还没提交，而当前事务可以通过 undolog 计算到之前的值。这里我们只需要知道和 redolog 一样， undolog 也是需要在执行 update 语句的时候在事务提交前需要写入到文件的。另外 undolog 的写入也会有对应的 redolog ，因为 undolog 也需要持久化，通过 WAL 可以提高效率。这里可以总结下，在事务提交的时候要保证 redolog 写入到文件里，而这个 redolog 包含 主键索引上的数据页的修改，以及共享表空间的回滚段中 undolog 的插入。另外 undolog 的清理通过一个后台线程定时处理，清理的时候需要判断该 undolog 是否所有的事务都不会用到</p><p>熟悉 MySQL 的都知道，他通过 binlog 来进行高可用，也就是通过 binlog 来将数据同步到集群内其他的 MySQL 实例。binlog 和 redolog 的区别是，他是在存储引擎上层 Server 层写入的，他记录的是逻辑操作，也就是对应的 sql ,而 redolog 记录的底层某个数据页的物理操作，redolog 是循环写的，而binlog 是追加写的，不会覆盖以前写的数据。而binlog 也需要在事务提交前写入文件。binlog 的写入页需要通过 fsync 来保证落盘，为了提高 tps ，MySQL　可以通过参数　　sync_binlog 来控制是否需要同步刷盘，该策略会影响当主库宕机后备库数据可能并没有完全同步到主库数据。由于事务的原子性，需要保证事务提交的时候 redolog 和 binlog 都写入成功，所以 MySQL 执行层采用了两阶段提交来保证 redolog 和 binlog 都写入成功后才 commit，如果一方失败则会进行回滚。</p><p>下面我们理一下一条　update 语句的执行过程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update person set age = 30 where id = 1;</span><br></pre></td></tr></table></figure></p><ol><li>分配事务 ID ，开启事务，获取锁，没有获取到锁则等待。</li><li>执行器先通过存储引擎找到 id = 1 的数据页，如果缓冲池有则直接取出，没有则去主键索引上取出对应的数据页放入缓冲池。</li><li>在数据页内找到 id = 1 这行记录，取出，将 age 改为 30 然后写入内存</li><li>生成 redolog undolog 到内存，redolog 状态为 prepare</li><li>将 redolog undolog 写入文件并调用 fsync</li><li>server 层生成 binlog 并写入文件调用 fsync</li><li>事务提交，将 redolog 的状态改为 commited 释放锁</li></ol><h1 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h1><p>数据库使用锁是为了对共享资源进行并发访问控制，从而保证数据的完整性和一致性。InnoDB 中锁的最小粒度为行，和 jdk 中的 ReadWriteLock 一样，InnoDB提供了共享锁和排他锁，分别用来读和写。共享锁之间可以兼容，其他都互斥。根据加锁的范围，可以分为：全局锁、表级锁、行锁。全局锁会把整个数据库实例加锁，命令为 flush tables withs read lock ，<br>将使数据库处于只读状态，其他数据写入和修改表结构等语句会阻塞，一般在备库上做全局备份使用。而表级锁有两种，一种是表锁，命令为 lock table with read/write ，和读写锁一样，另外一种是元数据锁，也叫意向锁，不需要显示申明，当执行修改表结构，加索引的时候会自动加元数据写锁，对表进行增删改查的时候会加元数据读锁。这样当两条修改语句的事务之间元数据锁都是读锁不互斥，但是修改表结构的时候执行更新由于互斥就需要阻塞。还有一种行级锁称为间隙锁，他锁定的是两条记录之间的间隙，防止其他事务往这个间隙插入数据，间隙锁是隐式锁，是存储引擎自己加上的</p><h2 id="非锁定读"><a href="#非锁定读" class="headerlink" title="非锁定读"></a>非锁定读</h2><p>普通的 select 操作都是非锁定读，如果存在事务冲突，会利用 undolog 获取新事务操作之前的镜像返回，在读已提交的隔离级别下，会获取新事务修改前的最新的一份已经提交的数据，而在可重复读的隔离级别下，会读取该事务开始时的数据版本。当有多个事务并发操作同一行记录时，该记录会同时存在多个 undolog ，每个 undolog 就是一个版本，这种模式称为多版本并发控制（MVCC） ，该模式能够极大的提高数据库的性能，想一想，如果基于锁来控制的话，当对某个记录进行修改的时候，另一个事务将需要等待，不管他是要读取还是写入，MVCC 允许写入的时候还能够进行读操作，这对大部分都是查询操作的应用来说极大的提高了 tps</p><h2 id="锁定读"><a href="#锁定读" class="headerlink" title="锁定读"></a>锁定读</h2><p>有时候我们在查询的时候需要显示的给记录加锁来保证一致性，select  for update 将对扫描到的记录加上排他锁，而 select in share lock 将对扫描的记录加上共享锁。这两个语句必须在一个事物内，也就是需要显示开启事物，begin transaction; 当事物提交的时候会释放锁。具体加锁的逻辑我们后面在分析。另外所有的锁定读都是当前读，也就是读取当前记录的最新版本，不会利用 undolog 读取镜像。另外所有的 insert、update、delete 操作也是当前读，update、delete 会在更新之前进行一次当前读，然后加锁，而 insert 因为会触发唯一索引检测，也会包含一个当前读。</p><h2 id="自增长锁"><a href="#自增长锁" class="headerlink" title="自增长锁"></a>自增长锁</h2><p>在主键设置为自增长的情况下，该表会维护一个计数器，每个插入操作都会先获取这个计数器的当前值，然后加 1 作为新的主键，显然这个计数器是一个共享变量需要加排他锁，而这个锁不需要等到事物提交后才释放，他在 sql 语句插入完成后就会释放，新版本的 innoDB 采用互斥量来实现提高了插入速度</p><h2 id="锁的问题"><a href="#锁的问题" class="headerlink" title="锁的问题"></a>锁的问题</h2><ul><li>脏读</li><li>不可重复读</li><li>丢失更新</li><li>死锁和热点</li></ul><p>脏读是指事务A对某个数据页进行了更改，但是并没有提交，这个数据就成为脏数据，这里稍微和上面提到的脏页做下区分，脏页是指内存中已经更改但是还没有刷新到磁盘的数据，脏页是正常的，而脏读是指一个事物读取了另外一个事物没有提交的数据，如果另外一个数据对这个数据又进行了更改，则出现数据一致性，脏读违背了数据库的隔离性。脏读目前只能出现在读未提交这个隔离级别下，目前 MySQL 默认的隔离级别为可重复读</p><p>不可重复读是指一个事务先后两次读取同一条记录的结果不一样，因为第二次读取的时候可能其他事务已经进行更改并提交，不可重复读只发生在隔离级别为读未提交和读已提交里。</p><p>丢失更新是指两个事务同时更新某一条记录，导致其中一个事务更新失效，理论上任何一个隔离级别都不会发生丢失更新，因为更新的时候会加上排他锁，但是应用中却经常发生，例如一个计数器应用，事务A查询计数器的值 v=5,在内存中加 1 写入到数据库，在写入之前另外一个事务读取到计数器的值 v=5 ，然后加 1 写入数据库，这样本来应该为 7 ， 现在却是 6 ，这是因为我们是先读取在写入，而读取和写入对数据库而言是两个操作，并不是一个原子操作，这里可以通过把查询的记录加上排他锁 select for update 来防止丢失更新现象。当然这里直接将 sql 改为 v = v + 1 也可以</p><p>死锁是指两个或两个以上事务因争夺资源而互相等待的情况，InnoDB 提供了死锁检测和超时机制来防止死锁的影响，死锁检测是非常耗 CPU 的，当很多个事务同时竞争同一个资源的时候，例如抢购的时候扣商品份额，或者支付的时候所有的订单都会用到一个公共账户，同一个资源竞争的事务越多，死锁检测越耗 CPU 。为了减少这种情况的影响，建议尽量在业务层减少热点的产生，例如将热点账户拆分成若个个同样功能的账户，万一发生高并发，建议在应用层做限流或者排队，当然也可以在数据库层做排队，这个需要修改数据库源码。</p><h2 id="加锁的流程"><a href="#加锁的流程" class="headerlink" title="加锁的流程"></a>加锁的流程</h2><p>InnoDB的加锁过程比较复杂，大致可以记住一个原则是：将所有扫描到的记录都加锁，范围查询会加间隙锁，然后加锁过程按照两阶段锁 2PL 来实现，也就是先加锁，然后所有的锁在事物提交的时候释放。怎么加锁和数据库的隔离级别有关，然而我们一般很少更改 MySQL 的隔离级别，所以下面我们均按照可重复读的隔离级别进行分析，另外一个因素是查询条件中是否包含索引，是主键索引还是普通索引，是否是唯一索引等。我们以下面这条 sql 语句来分析加锁过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from trade_order where order_no = &apos;201912102322&apos; for update;</span><br></pre></td></tr></table></figure></p><p>order_no 是主键索引 ，这种情况将在主键索引上的 order_no = ‘201912102322’ 这条记录上加排他锁</p><p>order_no 是普通索引，并且是唯一索引。 将会对 普通索引上对应的一条记录加排他锁，对主键索引上对应的记录加排他锁</p><p>order_no 是普通索引，并且不是唯一索引 将会对 普通索引上 order_no = ‘201912102322’  一条或者多条记录加锁，并且对这些记录对应的主键索引上的记录加锁。这里除了加上行锁外，还会加上间隙锁，防止其他事物插入　order_no = ‘201912102322’ 的记录，然而如果是唯一索引就不需要间隙锁，行锁就可以</p><p>order_no 上没有索引，innoDB 将会在主键索引上全表扫描，这里并没有加表锁，而是将所有的记录都会加上行级排他锁，而实际上 innoDB 内部做了优化，当扫描到一行记录后发现不匹配就会把锁给释放，当然这个违背了 2PL 原则在事务提交的时候释放。这里除了对记录进行加锁，还会对每两个记录之间的间隙加锁，所以最终将会保存所有的间隙锁和 order_no = ‘201912102322’ 的行锁。</p><p>order_no = ‘201912102322’ 这条记录不存在的情况下，如果order_no 是主键索引，则会加一个间隙锁，而这个间隙是主键索引中 order_no 小于 201912102322 的第一条记录到大于  201912102322 的第一条记录。试想一下如果不加间隙锁，如果其他事物插入了一条 order_no = ‘201912102322’ 的记录，由于 select for update 是当前读，即使上面那个事物没有提交，如果在该事物中重新查询一次就会发生幻读。如果没有索引，则对扫描到的所有记录和间隙都加锁，如果不匹配行锁将会释放只剩下间隙锁。回忆一下上面讲的数据页的结果中又一个最大记录和最小记录，Infimum 和 Supremum Record，这两个记录在加间隙锁的时候就会用到</p><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>InnoDB 存储引擎的事务需完全符合 ACID 特性。下面我们一起看下 InnoDB 做了哪些事情。</p><ul><li><p>原子性 : 是指一个事务内的所有操作要么全部成功要么全部失败，数据库中将 redolog 和 binlog 的写入采用两阶段提交就是为了保证事务的原子性。另外由于 InnodDB 是按页进行存储的，每个页大小为 16kb 而操作系统的一般以 4KB 为一页进行读取，所以可能出现一个 InnoDB 的数据页只写了一部分的情况。而 InnoDB 为了防止这种情况的发生采用双写机制，除了写入磁盘上的数据页还会在共享空间中写入。而 redolog 按块存储，每个块 512 字节，正好和扇区大小一样所以，可以保证原子性，不需要进行双写。</p></li><li><p>一致性 ：保证磁盘和缓存的数据一致，binlog 数据和 主库中的数据一致。</p></li><li><p>隔离性 ：默认为可重复读，采用 undolog 来实现。</p></li><li><p>持久性 ：事务一旦提交，其结果就是永久的，redolog 需要在事务提交前进行刷盘，磁盘采用 RAID 等</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mysql索引&quot;&gt;&lt;a href=&quot;#mysql索引&quot; class=&quot;headerlink&quot; title=&quot;mysql索引&quot;&gt;&lt;/a&gt;mysql索引&lt;/h1&gt;&lt;p&gt;为了快速定位到mysql存储的某张表，某行记录，以便进行查询与修改， 我们需要将数据以一定的数据结构进行存储，这个数据结构就是我们说的索引。能够支持快速查找的数据结构有： &lt;strong&gt;顺序数组，哈希， 搜索树。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://blog.readytran.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>设计模式六大原则</title>
    <link href="http://blog.readytran.com/2019/04/18/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%AD%E5%A4%A7%E5%8E%9F%E5%88%99/"/>
    <id>http://blog.readytran.com/2019/04/18/设计模式六大原则/</id>
    <published>2019-04-18T06:18:31.000Z</published>
    <updated>2019-04-18T06:34:05.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式六大原则"><a href="#设计模式六大原则" class="headerlink" title="设计模式六大原则"></a>设计模式六大原则</h1><ul><li><p>开闭原则（Open Close Principle）</p><p>  开闭原则的意思是： <strong>对扩展开放，对修改关闭</strong>。 在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简而言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，需要使用接口和抽象类</p></li><li><p>里氏代换原则（Liskov Substitution Principle）</p><p>  里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范</p></li><li><p>依赖倒转原则（Dependence Inversion Principle）</p><p>  这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体</p></li><li><p>接口隔离原则（Interface Segregation Principle）</p><p>  这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p></li><li><p>迪米特法则，又称最少知道原则（Demeter Principle）</p><p>  最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p></li><li><p>合成复用原则（Composite Reuse Principle）</p><p>  合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式六大原则&quot;&gt;&lt;a href=&quot;#设计模式六大原则&quot; class=&quot;headerlink&quot; title=&quot;设计模式六大原则&quot;&gt;&lt;/a&gt;设计模式六大原则&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开闭原则（Open Close Principle）&lt;/p&gt;
&lt;p&gt;  开
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>踩坑问题收集</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%B8%A9%E5%9D%91%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <id>http://blog.readytran.com/2019/04/12/踩坑问题收集/</id>
    <published>2019-04-12T08:52:41.000Z</published>
    <updated>2019-04-12T08:57:59.580Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS安装、配置APR和tomcat-native</p><pre><code>Tomcat可以使用APR来提供超强的可伸缩性和性能，更好地集成本地服务器技术。APR(Apache Portable Runtime)是一个高可移植库，它是Apache HTTP Server 2.x的核心。APR有很多用途，包括访问高级IO功能(例如sendfile,epoll和OpenSSL)，OS级别功能(随机数生成，系统状态等等)，本地进程管理(共享内存，NT管道和UNIX sockets)。所以我们需要配置tomcat native来加强tomcat性能，具体安装配置方法  `https://blog.csdn.net/ClementAD/article/details/47320037`</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CentOS安装、配置APR和tomcat-native&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tomcat可以使用APR来提供超强的可伸缩性和性能，更好地集成本地服务器技术。APR(Apache Portable Runtime)是一个高可移植库，它是Apache HTTP Se
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>资源收集- 一大波资源，需要的加我微信 juegu007</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/"/>
    <id>http://blog.readytran.com/2019/04/12/资源收集/</id>
    <published>2019-04-12T07:06:19.000Z</published>
    <updated>2019-05-12T03:19:06.365Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>认识systemd</title>
    <link href="http://blog.readytran.com/2019/04/12/%E8%AE%A4%E8%AF%86systemd/"/>
    <id>http://blog.readytran.com/2019/04/12/认识systemd/</id>
    <published>2019-04-12T03:24:49.000Z</published>
    <updated>2019-04-12T03:43:09.457Z</updated>
    
    <content type="html"><![CDATA[<p>Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置</p><h1 id="由来"><a href="#由来" class="headerlink" title="由来"></a>由来</h1><p>历史上，Linux 的启动一直采用init进程，<code>sudo /etc/init.d/apache2 start</code>。</p><p>这种方法有两个缺点。</p><pre><code>启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。</code></pre><a id="more"></a><h1 id="Systemd-概述"><a href="#Systemd-概述" class="headerlink" title="Systemd 概述"></a>Systemd 概述</h1><p>Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。</p><p>根据 Linux 惯例，字母d是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就是它要守护整个系统</p><p>Systemd 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂</p><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><p>Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面</p><h2 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h2><p><code>systemctl</code> 是 <code>Systemd</code> 的主命令，用于管理系统.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 重启系统</span><br><span class="line">$ sudo systemctl reboot</span><br><span class="line"></span><br><span class="line"># 关闭系统，切断电源</span><br><span class="line">$ sudo systemctl poweroff</span><br><span class="line"></span><br><span class="line"># CPU停止工作</span><br><span class="line">$ sudo systemctl halt</span><br><span class="line"></span><br><span class="line"># 暂停系统</span><br><span class="line">$ sudo systemctl suspend</span><br><span class="line"></span><br><span class="line"># 让系统进入冬眠状态</span><br><span class="line">$ sudo systemctl hibernate</span><br><span class="line"></span><br><span class="line"># 让系统进入交互式休眠状态</span><br><span class="line">$ sudo systemctl hybrid-sleep</span><br><span class="line"></span><br><span class="line"># 启动进入救援状态（单用户状态）</span><br><span class="line">$ sudo systemctl rescue</span><br></pre></td></tr></table></figure><h2 id="systemd-analyze"><a href="#systemd-analyze" class="headerlink" title="systemd-analyze"></a>systemd-analyze</h2><p>systemd-analyze命令用于查看启动耗时。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看启动耗时</span><br><span class="line">$ systemd-analyze </span><br><span class="line"></span><br><span class="line"># 查看每个服务的启动耗时</span><br><span class="line">$ systemd-analyze blame</span><br><span class="line"></span><br><span class="line"># 显示瀑布状的启动过程流</span><br><span class="line">$ systemd-analyze critical-chain</span><br><span class="line"></span><br><span class="line"># 显示指定服务的启动流</span><br><span class="line">$ systemd-analyze critical-chain atd.service</span><br></pre></td></tr></table></figure><h2 id="hostnamectl"><a href="#hostnamectl" class="headerlink" title="hostnamectl"></a>hostnamectl</h2><p>hostnamectl命令用于查看当前主机的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前主机的信息</span><br><span class="line">$ hostnamectl</span><br><span class="line"></span><br><span class="line"># 设置主机名。</span><br><span class="line">$ sudo hostnamectl set-hostname rhel7</span><br></pre></td></tr></table></figure><h2 id="localectl"><a href="#localectl" class="headerlink" title="localectl"></a>localectl</h2><p>localectl命令用于查看本地化设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查看本地化设置</span><br><span class="line">$ localectl</span><br><span class="line"></span><br><span class="line"># 设置本地化参数。</span><br><span class="line">$ sudo localectl set-locale LANG=en_GB.utf8</span><br><span class="line">$ sudo localectl set-keymap en_GB</span><br></pre></td></tr></table></figure><h2 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h2><p>timedatectl命令用于查看当前时区设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前时区设置</span><br><span class="line">$ timedatectl</span><br><span class="line"></span><br><span class="line"># 显示所有可用的时区</span><br><span class="line">$ timedatectl list-timezones</span><br><span class="line"></span><br><span class="line"># 设置当前时区</span><br><span class="line">$ sudo timedatectl set-timezone America/New_York</span><br><span class="line">$ sudo timedatectl set-time YYYY-MM-DD</span><br><span class="line">$ sudo timedatectl set-time HH:MM:SS</span><br></pre></td></tr></table></figure><h2 id="loginctl"><a href="#loginctl" class="headerlink" title="loginctl"></a>loginctl</h2><p>loginctl命令用于查看当前登录的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出当前session</span><br><span class="line">$ loginctl list-sessions</span><br><span class="line"></span><br><span class="line"># 列出当前登录用户</span><br><span class="line">$ loginctl list-users</span><br><span class="line"></span><br><span class="line"># 列出显示指定用户的信息</span><br><span class="line">$ loginctl show-user ruanyf</span><br></pre></td></tr></table></figure><h1 id="Unit"><a href="#Unit" class="headerlink" title="Unit"></a>Unit</h1><p>Systemd 可以管理所有系统资源。不同的资源统称为 Unit（单位）。</p><pre><code>1. Service unit：系统服务2. Target unit：多个 Unit 构成的一个组3. Device Unit：硬件设备4. Mount Unit：文件系统的挂载点5. Automount Unit：自动挂载点6. Path Unit：文件或路径7. Scope Unit：不是由 Systemd 启动的外部进程8. Slice Unit：进程组9. Snapshot Unit：Systemd 快照，可以切回某个快照10. Socket Unit：进程间通信的 socket11. Swap Unit：swap 文件12. Timer Unit：定时器</code></pre><h1 id="Unit-的配置文件"><a href="#Unit-的配置文件" class="headerlink" title="Unit 的配置文件"></a>Unit 的配置文件</h1><p>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit 。</p><p>Systemd 默认从目录/etc/systemd/system/读取配置文件。但是，里面存放的大部分文件都是符号链接，指向目录/usr/lib/systemd/system/，真正的配置文件存放在那个目录。</p><p>systemctl enable命令用于在上面两个目录之间，建立符号链接关系</p><p><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置&lt;/p&gt;
&lt;h1 id=&quot;由来&quot;&gt;&lt;a href=&quot;#由来&quot; class=&quot;headerlink&quot; title=&quot;由来&quot;&gt;&lt;/a&gt;由来&lt;/h1&gt;&lt;p&gt;历史上，Linux 的启动一直采用init进程，&lt;code&gt;sudo /etc/init.d/apache2 start&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种方法有两个缺点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。
启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>常用linux命令</title>
    <link href="http://blog.readytran.com/2019/04/09/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.readytran.com/2019/04/09/常用linux命令/</id>
    <published>2019-04-08T16:21:43.000Z</published>
    <updated>2019-04-12T03:02:03.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在linux中将ssh用户踢下线"><a href="#在linux中将ssh用户踢下线" class="headerlink" title="在linux中将ssh用户踢下线"></a>在linux中将ssh用户踢下线</h1><ul><li>查看当前登录用户： <code>w</code></li><li>查看自己： <code>who am i</code></li><li>将可疑用户T下线： <code>pkill -kill -t tty1</code></li></ul><a id="more"></a><h1 id="挂载一个硬盘"><a href="#挂载一个硬盘" class="headerlink" title="挂载一个硬盘"></a>挂载一个硬盘</h1><ul><li>查看数据盘： <code>fdisk -l</code></li><li>分区数据盘 <code>fdisk -u /dev/vdb</code></li><li>输入 p 查看分区情况</li><li>输入n创建一个新分区</li><li>输入p选择分区类型为主分区， 也可以创建为扩展分区，那就是输入e了</li><li>输入分区编号， 我只分一个区，所以输入 1</li><li>输入可用的扇区编号，我选择默认（2048）</li><li>输入最后一个扇区编号，我选择默认</li><li>输入p进行查看分区情况</li><li>输入w，开始分区，并在分区后退出</li><li>运行命令 <code>mkfs.ext4 /dev/vdb1</code>在新分区上创建一个文件系统</li><li>运行命令 <code>cp /etc/fstab /etc/fstab.bak</code> 备份 etc/fstab</li><li><code>echo /dev/vdb1 /mnt ext4 defaults 0 0 &gt;&gt; /etc/fstab</code> 向 /etc/fstab 写入新分区信息</li><li>运行命令 <code>mount /dev/vdb1 /mnt</code> 挂载文件系统</li><li>运行命令 <code>df -h</code> 查看目前磁盘空间和使用情况</li></ul><h1 id="添加用户与用户组"><a href="#添加用户与用户组" class="headerlink" title="添加用户与用户组"></a>添加用户与用户组</h1><h2 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd webguest</span><br></pre></td></tr></table></figure><h2 id="添加用户并创建目录，指定分组"><a href="#添加用户并创建目录，指定分组" class="headerlink" title="添加用户并创建目录，指定分组"></a>添加用户并创建目录，指定分组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g webguest -d /home/webguest webguest</span><br></pre></td></tr></table></figure><h2 id="添加用户到sudoer"><a href="#添加用户到sudoer" class="headerlink" title="添加用户到sudoer"></a>添加用户到sudoer</h2><p>输入visudo命令， 在文件末尾加入配置：webguest ALL=(ALL)       ALL</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;a href=&quot;#在linux中将ssh用户踢下线&quot; class=&quot;headerlink&quot; title=&quot;在linux中将ssh用户踢下线&quot;&gt;&lt;/a&gt;在linux中将ssh用户踢下线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;查看当前登录用户： &lt;code&gt;w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看自己： &lt;code&gt;who am i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将可疑用户T下线： &lt;code&gt;pkill -kill -t tty1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.readytran.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>idea好用的插件</title>
    <link href="http://blog.readytran.com/2019/04/03/idea%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://blog.readytran.com/2019/04/03/idea好用的插件/</id>
    <published>2019-04-03T02:40:43.000Z</published>
    <updated>2019-04-03T03:33:04.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mybatis-Generator自动构建插件"><a href="#Mybatis-Generator自动构建插件" class="headerlink" title="Mybatis-Generator自动构建插件"></a>Mybatis-Generator自动构建插件</h1><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索better-mybatis-generator -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li>使用方法<ul><li>配置插件：打开IDEA -&gt; File -&gt; Settings… -&gt; Tools -&gt; Mybatis generator plugin，就可以看到配置界面。只要配置好对应的model，dao，xml路径即可。其他一般都不需要动。</li><li>添加数据库：在IDEA界面右侧选择Database -&gt; 选择+号 -&gt; Data Source -&gt; 选择添加的数据库。 这时候会弹出配置数据库名，用户，密码界面，配置即可。</li><li>生成代码：点击database里面的表，选择mybatis generate</li></ul></li></ul><h1 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h1><pre><code>项目中经常使用bean，entity等类，绝大部分数据类类中都需要get、set、toString、equals和hashCode方法，虽然eclipse和idea开发环境下都有自动生成的快捷方式，但自动生成这些代码后，如果bean中的属性一旦有修改、删除或增加时，需要重新生成或删除get/set等方法，给代码维护增加负担。而使用了lombok则不一样，使用了lombok的注解(@Setter,@Getter,@ToString,@@RequiredArgsConstructor,@EqualsAndHashCode或@Data)之后，就不需要编写或生成get/set等方法，很大程度上减少了代码量，而且减少了代码维护的负担。故强烈建议项目中使用lombok，去掉bean中get、set、toString、equals和hashCode等方法的代码</code></pre><ul><li>安装方法<ul><li>打开IDEA -&gt; File -&gt; Settings… -&gt; Plugins -&gt; 点击”browse repositories” -&gt; 搜索lombok -&gt; Install，这样就可以安装了，安装完成后记得重启IDEA</li></ul></li><li><p>使用方法</p><ul><li>添加maven依赖, 去这里搜索 <strong><a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.16.20&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在类名上加上注解，代码如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@ToString</span><br><span class="line">@EqualsAndHashCode</span><br><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    private String male;</span><br><span class="line">    private String studentNo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;a href=&quot;#Mybatis-Generator自动构建插件&quot; class=&quot;headerlink&quot; title=&quot;Mybatis-Generator自动构建插件&quot;&gt;&lt;/a&gt;Mybatis-Generator
      
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之“树”</title>
    <link href="http://blog.readytran.com/2019/03/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E2%80%9C%E6%A0%91%E2%80%9D/"/>
    <id>http://blog.readytran.com/2019/03/31/数据结构之“树”/</id>
    <published>2019-03-31T07:20:26.000Z</published>
    <updated>2019-04-03T04:58:33.717Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper学习</title>
    <link href="http://blog.readytran.com/2019/03/31/zookeeper%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.readytran.com/2019/03/31/zookeeper学习/</id>
    <published>2019-03-31T07:10:46.000Z</published>
    <updated>2019-03-31T07:10:46.813Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>dubbo搭建demo</title>
    <link href="http://blog.readytran.com/2019/03/28/dubbo%E6%90%AD%E5%BB%BAdemo/"/>
    <id>http://blog.readytran.com/2019/03/28/dubbo搭建demo/</id>
    <published>2019-03-28T01:55:15.000Z</published>
    <updated>2019-04-01T02:36:43.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>zookeeper 注册中心<br>consumer  消费端<br>provider 服务提供者</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><ul><li><p>什么是zookeeper？</p><p>  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。</p></li><li><p>安装zookeeper</p><ul><li>下载：<a href="https://mirrors.cnnic.cn/apache/zookeeper/stable/" target="_blank" rel="noopener">https://mirrors.cnnic.cn/apache/zookeeper/stable/</a></li><li>解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项<ul><li>tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。</li><li>dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。</li><li>dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录</li><li>clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。</li></ul></li><li>启动： 进入bin目录，启动zkServer.cmd</li></ul></li><li><p>安装redis服务器（非必须，我这个demo用来做session中心化）</p></li></ul><a id="more"></a><h1 id="编写provider模块"><a href="#编写provider模块" class="headerlink" title="编写provider模块"></a>编写provider模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:service       -&gt; 定义服务id，暴露给消费者, 需要定一个bean用于服务的具体实现。跟最开始的spring配置没差别</li><li>dubbo:protocol      -&gt; 定义为dubbo协议， 可能是用于扩展用吧， 搞不懂为什么要配置这个，都是固定死的</li></ul><p>具体实现比较简单，就是查询一个数据库表单数据，然后将表单数据序列化。</p><h1 id="编写consumer模块"><a href="#编写consumer模块" class="headerlink" title="编写consumer模块"></a>编写consumer模块</h1><p>采用的xml配置模式， 主要配置以下内容：</p><ul><li>dubbo:application   -&gt; 服务应用名称</li><li>dubbo:registry      -&gt; 注册中心地址配置，这里配置的是zookeeper，官方demo用的是multicast</li><li>dubbo:reference     -&gt; 远程服务，导入jar包即可使用</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>启动provider， consumer。 通过浏览器访问consumer提供的网页。 </p><hr><p>对公司的产品线重构成微服务的一点思考。目前公司的工程很多，包括： 管理后台， pc充值系统， 手机充值系统， 接口服务。<br>每个系统都需要访问数据库，编写重复的model，充值服务分散在三个工程里面，充值回调接口也分散在不同的工程。用户注册还好，都是调用的http接口，或者直接嵌入一个公用网页。</p><p>那么应该怎么改造呢，改造是为了查问题方便，代码复用。 首先，需要建立一个工作空间，将各个工程模块化，这样可以统一管理工程。 其次，将各service接口抽出来形成一个模块，比如充值，注册，充值参数可以用数据库管理起来。最后就是各种工具包可以独立成模块了，包括各种vo都形成可以打jar包的模块，这样可以避免浪费时间写这些重复代码。 </p><p>问题：功能都独立成模块后，如果改动了公用模块， 引用方要怎么更新呢， 不需要更新的时候怎么办？</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h1&gt;&lt;p&gt;zookeeper 注册中心&lt;br&gt;consumer  消费端&lt;br&gt;provider 服务提供者&lt;/p&gt;
&lt;h1 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h1&gt;&lt;h2 id=&quot;zookeeper&quot;&gt;&lt;a href=&quot;#zookeeper&quot; class=&quot;headerlink&quot; title=&quot;zookeeper&quot;&gt;&lt;/a&gt;zookeeper&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么是zookeeper？&lt;/p&gt;
&lt;p&gt;  zookeeper: 分布式协调服务，分布式系统中共享配置，协调锁资源，提供命名服务。数据存储为树型目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装zookeeper&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载：&lt;a href=&quot;https://mirrors.cnnic.cn/apache/zookeeper/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.cnnic.cn/apache/zookeeper/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压，修改配置文件- 将conf/zoo_sample.cfg复制为conf/zoo.cfg，修改配置项&lt;ul&gt;
&lt;li&gt;tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。&lt;/li&gt;
&lt;li&gt;dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。&lt;/li&gt;
&lt;li&gt;dataLogDir：顾名思义就是 Zookeeper 保存日志文件的目录&lt;/li&gt;
&lt;li&gt;clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;启动： 进入bin目录，启动zkServer.cmd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装redis服务器（非必须，我这个demo用来做session中心化）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>redis实战读书笔记</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%AE%9E%E6%88%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.readytran.com/2019/03/26/redis实战读书笔记/</id>
    <published>2019-03-26T07:38:26.000Z</published>
    <updated>2019-04-01T02:36:04.754Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>redis数据结构</p><p>  redis数据结构有以下几种：</p><ul><li>string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.</li><li>list：双向链表， 首尾插入时性能高， 但是随机读写效率不高</li><li>set：无序集合</li><li>sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表</li><li>hash</li><li>bitmap</li></ul></li></ul><a id="more"></a><ul><li>数据持久化<ul><li>redis有两种数据持久化： RDB与AOF</li><li>RDB: 根据配置的策略实现当N秒内改动次数达到x次，即持久化到硬盘。可以配置多种策略以便达到最佳效果。</li><li>AOF: 对每个操作日志持久化，还原的时候按操作日志进行还原。文件相比rdb大，性能要低。可以配置三种模式：always，every second，no（由操作系统决定什么时候持久化）</li></ul></li><li>内存管理与数据淘汰机制<ul><li>默认情况下，在 32 位 OS 中，Redis 最大使用 3GB 的内存，在 64 位 OS 中则没有限制</li><li>设置maxmemory,当内存占用达到了maxmemory的时候，向redis写入数据，redis会对内存进行调整：<ul><li>按照数据淘汰策略淘汰数据，释放空间</li><li>如果没有数据可以淘汰，会对写请求报错，但是读请求不受影响</li></ul></li><li>redis提供了5种数据淘汰策略：<ul><li>volatile-lru：使用 LRU 算法进行数据淘汰（淘汰上次使用时间最早的，且使用次数最少的 Key），只淘汰设定了有效期的 Key。</li><li>allkeys-lru：使用 LRU 算法进行数据淘汰，所有的 Key 都可以被淘汰</li><li>volatile-random：随机淘汰数据，只淘汰设定了有效期的 Key。</li><li>allkeys-random：随机淘汰数据，所有的 Key 都可以被淘汰。</li><li>volatile-ttl：淘汰剩余有效期最短的 Key。</li></ul></li></ul></li></ul><pre><code>配置方法：  maxmemory-policy volatile-lru </code></pre><ul><li><p>pipelining</p><p>  实现在一次交互中执行多条命令，适用于批量命令（mset/mget）无法顾及到的地方</p></li><li><p>事务与scripting</p><p>  Redis 的事务可以确保复数命令执行时的原子性，可以使用multi，exec来达到事务的目的。执行multi时，开启事务，此时命令只是被放入执行队列，并不执行，执行exec命令的时候才会执行所有的命令。redis事务不支持回滚。</p></li><li>redis性能调优</li><li>主从复制与集群分片</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;redis数据结构&lt;/p&gt;
&lt;p&gt;  redis数据结构有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string: 表示的是一个可变的字节数组，内部结构实现类似于java的arraylist，采用预分配冗余空间来减少内存的频繁分配。当字符串长度大于1M的时候，扩容的时候固定多扩容1M， 而小于1M的时候每次都是按双倍来扩容。最大只能存放512M.&lt;/li&gt;
&lt;li&gt;list：双向链表， 首尾插入时性能高， 但是随机读写效率不高&lt;/li&gt;
&lt;li&gt;set：无序集合&lt;/li&gt;
&lt;li&gt;sorted set：有序集合。底层实现通过一个hash和一个跳跃表来维护。hash用来关联value和score，跳跃列表用来给元素value排序，按score的范围获取元素列表&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://blog.readytran.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis分布式锁</title>
    <link href="http://blog.readytran.com/2019/03/26/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    <id>http://blog.readytran.com/2019/03/26/redis分布式锁/</id>
    <published>2019-03-26T06:03:34.000Z</published>
    <updated>2019-03-31T07:06:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁</p><p><strong>为什么用redis分布式锁，怎么用呢？</strong></p><ul><li><p>为什么？</p><ul><li>使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作</li></ul></li><li><p>怎么用？</p><ul><li>加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放</li><li>解锁的时候判断是否为锁的拥有者，如果是，则删除key。<a id="more"></a></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line">import java.util.Collections;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取分布式锁的工具类， 下面的第二个链接讲了错误示例， 在第一个里面出现。 可见看别人的文章需要去分析。</span><br><span class="line"> * https://juejin.im/entry/5a502ac2518825732b19a595</span><br><span class="line"> * https://juejin.im/entry/59f7bbde5188252946502fed</span><br><span class="line"> */</span><br><span class="line">public class RedisLockTool &#123;</span><br><span class="line">    private static final String LOCK_SUCCESS = &quot;OK&quot;;</span><br><span class="line">    private static final Long RELEASE_SUCCESS = 1L;</span><br><span class="line">    private static final String SET_IF_NOT_EXIST = &quot;NX&quot;;</span><br><span class="line">    private static final String SET_WITH_EXPIRE_TIME = &quot;PX&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 尝试获取分布式锁</span><br><span class="line">     *</span><br><span class="line">     * @param jedis      Redis客户端</span><br><span class="line">     * @param lockKey    锁</span><br><span class="line">     * @param requestId  请求标识</span><br><span class="line">     * @param expireTime 超期时间</span><br><span class="line">     * @return 是否获取成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean tryGetDistributedLock(Jedis jedis, String lockKey, String requestId, int expireTime) &#123;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 1. lockKey, 互斥信号,谁能往redis设置这个key即为获取到锁</span><br><span class="line">         * 2. requestid，线程id，可以使用uuid来生成，标识锁的拥有者</span><br><span class="line">         * 3. NX：不存在即set，存在则不处理</span><br><span class="line">         * 4. PX: 锁的超时时间</span><br><span class="line">         */</span><br><span class="line">        String result = jedis.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span><br><span class="line"></span><br><span class="line">        if (LOCK_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 释放分布式锁</span><br><span class="line">     * @param jedis Redis客户端</span><br><span class="line">     * @param lockKey 锁</span><br><span class="line">     * @param requestId 请求标识</span><br><span class="line">     * @return 是否释放成功</span><br><span class="line">     */</span><br><span class="line">    public static boolean releaseDistributedLock(Jedis jedis, String lockKey, String requestId) &#123;</span><br><span class="line">        String script = &quot;if redis.call(&apos;get&apos;, KEYS[1]) == ARGV[1] then return redis.call(&apos;del&apos;, KEYS[1]) else return 0 end&quot;;</span><br><span class="line">        //使用eval， 将命令交给redis服务器处理，eval可以保证原子性</span><br><span class="line">        Object result = jedis.eval(script, Collections.singletonList(lockKey), Collections.singletonList(requestId));</span><br><span class="line"></span><br><span class="line">        if (RELEASE_SUCCESS.equals(result)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分布式锁一般有三种实现方式：1. 数据库乐观锁；2. 基于Redis的分布式锁；3. 基于ZooKeeper的分布式锁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么用redis分布式锁，怎么用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用redis锁，主要是为了解决分布式部署环境下多进程对资源的操作不会导致脏读脏写。redis锁相比数据库的性能要好，因为是在内存中操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么用？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加锁的时候往redis里面写入一个key-value， 当其他线程进入这段代码时候发现key已经存在的时候就需要等待key被释放&lt;/li&gt;
&lt;li&gt;解锁的时候判断是否为锁的拥有者，如果是，则删除key。
    
    </summary>
    
    
      <category term="java" scheme="http://blog.readytran.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>隐私日记</title>
    <link href="http://blog.readytran.com/2019/03/25/%E9%9D%A2%E8%AF%95/"/>
    <id>http://blog.readytran.com/2019/03/25/面试/</id>
    <published>2019-03-25T06:48:51.000Z</published>
    <updated>2019-04-22T12:26:59.505Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/22/resume/"/>
    <id>http://blog.readytran.com/2019/03/22/resume/</id>
    <published>2019-03-22T12:59:07.000Z</published>
    <updated>2019-04-18T06:55:30.261Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>不公开</title>
    <link href="http://blog.readytran.com/2019/03/21/interview/"/>
    <id>http://blog.readytran.com/2019/03/21/interview/</id>
    <published>2019-03-21T12:59:07.000Z</published>
    <updated>2019-04-03T04:30:30.802Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码查阅" />    <label for="pass">请输入密码查阅</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      不公开
    
    </summary>
    
    
      <category term="个人隐私" scheme="http://blog.readytran.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>读书</title>
    <link href="http://blog.readytran.com/2019/03/21/%E8%AF%BB%E4%B9%A6/"/>
    <id>http://blog.readytran.com/2019/03/21/读书/</id>
    <published>2019-03-21T09:33:12.000Z</published>
    <updated>2019-04-07T13:54:15.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><p>已读的书</p><blockquote><p>《曾国藩传》</p></blockquote><p>读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。<br><a id="more"></a></p><blockquote><p>《sed与awk》</p></blockquote><p>偏实操的书，读到后面，难度有点大，走马观花的读完没有去验证，等以后补上吧。 </p><blockquote><p>redis实战<br>对redis有了一定了解，后面的部分没读完， 改从公众号推文上面看了，有时间再重新读一次并实际演练</p></blockquote><p>计划读的书</p><blockquote><p>《人类简史》</p></blockquote><blockquote><p>《人月神话》</p></blockquote><blockquote><p>《深入理解jvm虚拟机》</p></blockquote><blockquote><p>《spring内幕》</p></blockquote><blockquote><p>《阿里java开发手册》</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019&quot;&gt;&lt;a href=&quot;#2019&quot; class=&quot;headerlink&quot; title=&quot;2019&quot;&gt;&lt;/a&gt;2019&lt;/h1&gt;&lt;p&gt;已读的书&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《曾国藩传》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读后感： 以前学习历史的时候，对曾国藩可以说是相当鄙视的，被太平天国打的几次要跳水自杀。读完这本书发现，他比左宗棠还伟大。他本身并不聪明，记忆力很差（比我差远了），身体也不行。但是他一直在致力于做圣人的目标， 为了达成这样的目标，他想尽办法，每天都读书，写日志反省自己。 他提出尚拙的理念，其实就是要自己将基础夯实。很认可他的书要一本一本的读，读完一本再去读下一本的理念。 看完后给自己立下目标，不再想尽办法去搜集下载书，将计划要读的书读好了再去读下一本书，让自己不再浮躁。博客要坚持写下去， 让自己学会思考，而不是一直在接受别人的想法中。 学习曾国藩的为人信条： 不因谄媚而去夸奖，因为那会让你的夸奖显得廉价，让别人对你的夸奖不在乎，如果我每次都是发自内心的夸奖，那么我的夸奖就会让人觉得很开心。&lt;br&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://blog.readytran.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
